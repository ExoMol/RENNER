      SUBROUTINE RHOFCT ( V0 , SYMJ0 , ASYJ0 , SYMJP , ASYJP , XINTA ,
     1                    DGKDR, COSGM, SINGM, AMUZZ, 
     2                    KFSYM0 , KFASY0 , KFSYMJ , KFASYJ , KFINTA)
      IMPLICIT REAL*8 (A-H,O-Z)
C             :
C DATE        : 28.04.1986
C AUTHOR      : PER JENSEN
C UPDATES     :
C LANGUAGE    : FORTRAN
C PURPOSE     : SETS UP THE RHO DEPENDENT FUNCTIONS NEEDED TO
C             : CALCULATE THE ROTATION-VIBRATION ENERGIES OF A
C             : TRIATOMIC MOLECULE USING THE MORBID SCHEME.
C SUBPROGRAMS :
C      CALLED :
C             :
C
      REAL*8 M1,M2,M3,M,U1,U3,U13,V
C
      REAL*8 AMASS(3,10)
C
      REAL*8 RHOE,FA1,FA2,FA3,FA4,FA5,FA6,FA7,FA8,
     1       AA1,AA3,
     2       F1A1,F2A1,F3A1,F4A1,F1A3,F2A3,F3A3,F4A3,
     3       F11,F1A11,F2A11,F3A11,F33,F1A33,F2A33,F3A33,
     4       F13,F1A13,F2A13,F3A13,
     5       F111,F1A111,F2A111,F333,F1A333,F2A333,
     6       F113,F1A113,F2A113,F133,F1A133,F2A133,
     7       F1111,FA1111,F3333,FA3333,F1113,FA1113,
     8       F1333,FA1333,F1133,FA1133,
     8       RE12 , RE32 , RHOREF , VMIN
C
      REAL*8 ETRIAL , RHOMAX , PNM1 , HBASE , HSTEP , EGUESS ,
     1      PREC
C
      REAL*8 testi, testii, testiii, testiv
C
      REAL*8 THRSH1 , THRSH2 , THRSH3 , THRSH4 , THRSH5 ,
     1      THRSH6 , THRSH7 , THRSH8 , THRSH9 , THRSHX ,
     2      VELLGT , PLANCK , AVOGNO , DEGRAD , RADDEG ,
     3      PI
C
      REAL*8 B11,B13,B111,B133,B113,
     2      B1111,B1333,B1113,B1133,
     3      B11111,B13333,B11113,B11333,B11133,
     4      B31,B33,B311,B333,B313,
     5      B3111,B3333,B3113,B3133,
     6      B31111,B33333,B31113,B31333,B31133
C
      REAL*8 CR1,CR3,CR11,CR33,CR13,
     2      CR111,CR333,CR113,CR133,
     3      CR1111,CR3333,CR1113,CR1333,CR1133
C
      INTEGER NFIL1 , NFIL2 , NFIL3 , NFIL4 , NFIL5 ,
     5       NFIL6 , NFIL7 , NFIL8 , NFIL9 , NFIL10 ,
     6       NFIL11 , NFIL12 , NFIL13 , NFIL14 , NFIL15 ,
     7       NFIL16 , NFIL17 , NFIL18 , NFIL19 , NFIL20 ,
     6       ITEST  , IPRINT , NSTNR , NSTNIN , IREST ,
     7       IISOT , IQUAS , ISYMS , NISOT , NQUAS ,
     8       NUMQUA , NOPTIT , NOPTIM , IOBSER , NOBSER,
     9       ISOMAX , NATTS  , V0TYPE , IVAR(128) , PARMAX ,
     1       NUMPAR , PRTINT , NFIL41 , NFIL42 , NFIL43, NFIL44,
     2       NFIL45 , NFIL46 , NFIL47 , NFIL48
C
      INTEGER V1 ,V2, V3 , V2MXP1, V2P1,
     1       NSTINT , NSERIN , NSERP , NSERQ , KQUA , NTEST ,
     2       NSEPP2 , NSEQP1 , MBASIS , RRHOF,
     3       MDIM , NFSYM0, NFASY0, NFSYMJ, NFASYJ,
     4       KSTYPA(2) , LSTYPA(2) , JMAX , V2MAX , JMAXP1
C
      INTEGER IQUANT(9,10)
C
      LOGICAL SYMM
C
      REAL*8 RMK(2),AAS(2)
      INTEGER NOBAS,MBASP1,LENIW
      REAL*8 SYMJ0(KFSYM0),ASYJ0(KFASY0),SYMJP(KFSYMJ),
     1      ASYJP(KFASYJ),V0(NSTINT),XINTA(KFINTA),
     2      AMUZZ(JMAXP1*NSTINT), 
     3      W12, AUX1, HELP, DCGDR ,
     4      COSGM(JMAXP1*NSTINT), SINGM(JMAXP1*NSTINT),
     5      DGKDR(JMAXP1*NSTINT)

      REAL*8 EPSC1,EPSC2,CORHOE
      REAL*8 MUXXY(15),MUYYY(15),MUZZY(15),MURRY(15),
     1       MUYZY(15),MUXRY(15),
     2       PX1Y(15),PX3Y(15),PR1Y(15),PR3Y(15),
     3       PXMXX1(15),PXMXX3(15),PRMXR1(15),PRMXR3(15),
     4       PXMXR1(15),PXMXR3(15),PRMRR1(15),PRMRR3(15),
     5       VCOEF1(15),VCOEF2(15),SOCOER(15),SOCOEY(15),
     6       MUZZIN(15),MUYZIN(15),P1P3CR(15),P1P3CY(15)
      INTEGER I,KFSYM0,KFASY0,KFSYMJ,KFASYJ,L,NREMAI,
     1       NRECS ,NREMP1
      INTEGER KESYM0 , KEASY0 , KESYMJ , KEASYJ
C
      REAL*8 DMMMY(15),DMMMZ(15),
     1       DMPPY(15),DMPPZ(15),
     2       DMMPX(15)
C
      include 'equfcs.h'
      include 'isotop.h'
      include 'value.h'
      include 'molcul.h'
      include 'rentel.h'
      include 'integ.h'
      include 'dimen.h'
      include 'lsfit.h'
      include 'rensys.h'
      include 'bcoeff.h'
      include 'crcoef.h'
      include 'morse.h'
      include 'modim.h'
      include 'lzcomp.h'
C     
      REWIND NFIL46
      REWIND NFIL47
      REWIND NFIL48
      REWIND NFIL49
C
      CONVU=PLANCK*AVOGNO*1.0E+16/(4.0E+00*PI*PI*VELLGT)
      U1=M1*(M3+M2)*RE12*RE12
      U3=M3*(M1+M2)*RE32*RE32
      U13=M1*M3*RE12*RE32
      SQ2 = SQRT(2.0D+00)
      V=M2*(M1+M2+M3)*RE12*RE32
      EPSC1=(U1-U3)/SQRT((U1+U3)**2-4.0E0*U13**2)
      EPSC2=SQRT((U1+U3-2.0E0*U13)/(U1+U3+2.0E0*U13))
      F2COEF=(M/(U1*U3-U13**2))
     1      *((PLANCK*AVOGNO*1.0D+16)/(4.0D+00*PI*PI*VELLGT))
      CONPSE=(PLANCK*AVOGNO*1.0D+16)/(8.0D+00*PI*PI*VELLGT)
      CONPS2=2.0D+00*CONPSE
C
C     START LOOP OVER RHO
C
      DO 1000 I=1,NSTINT
      RHO=DFLOAT(I)*HSTEP
      EPS=0.5D0*RHO+EPSC1*ATAN(EPSC2*TAN(0.5D0*RHO))
      CR=COS(RHO)
      SR=SIN(RHO)
      CSE=COS(EPS)
      SNE=SIN(EPS)
      CRE=CR*CSE+SR*SNE
      SRE=SR*CSE-CR*SNE
      EPSP=(U1+U13*CR)/(U1+U3+2.0E0*U13*CR)
      EPSPP=U13*SR*(U1-U3)/(U1+U3+2.0E0*U13*CR)**2
      EPSPPP=U13*(U1-U3)*(CR/(U1+U3+2.0E0*U13*CR)**2
     1     +4.0E0*U13*SR*SR/(U1+U3+2.0E0*U13*CR)**3)
      IOSYM0=(I-1)*NFSYM0
      IOASY0=(I-1)*NFASY0
      IOSYMJ=(I-1)*NFSYMJ
      IOASYJ=(I-1)*NFASYJ
      IOINTA=(I-1)*NFINTA
C
C     GENERATE THE COEFFICIENTS IN THE EXPANSIONS OF THE S I'S
C     IN TERMS OF THE DELTA R I'S.
C
      CALL BCOEF
C
C     GENERATE THE COEFFICIENTS IN THE EXPANSIONS OF COS RHO BAR
C     IN TERMS OF THE DELTA R I'S.
C
      CALL COSRB
C
C     GENERATE THE COEFFICIENTS IN THE EXPANSIONS OF THE MU
C     TENSOR ELEMENTS AND THE VIBRATIONAL ANGULAR MOMENTA IN
C     TERMS OF THE DELTA R I'S.
C
      CALL MUTENS ( MUXXY , MUYYY , MUZZY ,
     2             MUYZY , MURRY , MUXRY ,
     3             PXMXX1  , PXMXX3 , PRMXR1 , PRMXR3 ,
     2             PXMXR1  , PXMXR3 , PRMRR1 , PRMRR3 ,
     6             MUZZIN  , MUYZIN,
     7             DMMMY,DMMMZ,
     8             DMPPY,DMPPZ,
     9             DMMPX)
C
C     GENERATE THE LEADING TERM IN THE PSEUDOPOTENTIAL TERM
C     U0 (SEE PAPER BY SARKA AND BUNKER FOR NOTATION). THE
C     PURELY VIBRATIONAL CONTRIBUTION TO U0 IS GENERATED IN U0VIB,
C     FOR THE PURELY ROTATIONAL CONTRIBUTION WE USE SARKA AND
C     BUNKER'S RESULT WITH C(RHO) = -1/SIN(RHO)*SIN(RHO)
C
      CALL U0VIB( UVVAL )
      URVAL = -MUXXY(1)/8.0E+00 - (M1+M2+M3)**2*MUXXY(1)*U13*U13/
     1                 (8.0E+00*(U1*U3-U13*U13)*(U1*U3-U13*U13*CR*CR))
C
C     GENERATE THE COEFFICIENTS IN THE EXPANSIONS OF THE
C     POTENTIAL ENERGY IN TERMS OF THE DELTA R I'S.
C
      CALL CSHEET ( 1 )
      CALL VPOT ( VCOEF1 )
      CALL CSHEET ( 2 )
      CALL VPOT ( VCOEF2 )
      V0(I)=VCOEF1(1)
C
C     CALCULATE COEFFICIENTS FOR THE P1*P3 TERM IN THE VIBRATIONAL
C     HAMILTONIAN
C
      P1P3CR( 1) = -CR
      P1P3CR( 2) = CR1
      P1P3CR( 3) = CR3
      P1P3CR( 4) = CR11
      P1P3CR( 5) = CR33
      P1P3CR( 6) = CR13
      P1P3CR( 7) = CR111
      P1P3CR( 8) = CR333
      P1P3CR( 9) = CR113
      P1P3CR(10) = CR133
      P1P3CR(11) = CR1111
      P1P3CR(12) = CR3333
      P1P3CR(13) = CR1113
      P1P3CR(14) = CR1333
      P1P3CR(15) = CR1133
      CALL TRNSRY ( P1P3CR , P1P3CY )
C
C     CALCULATE COEFFICIENTS FOR THE SPIN-ORBIT INTERACTION
C     OPERATOR TO BE USED IN THE RENNER-TELLER CALCULATION
      CALL ASPORB ( SOCOER )
      CALL TRNSRY ( SOCOER , SOCOEY )
C
C     THE VARIOUS EXPANSION COEFFICIENTS ARE NOW STORED IN
C     THE WORK ARRAY IN ORDER TO BE USED FOR CALCULATIONS
C     OF INTEGRALS
C
      SYMJ0(IOSYM0+1)=MURRY(1)
      SYMJ0(IOSYM0+2)=MURRY(2)
      SYMJ0(IOSYM0+3)=MURRY(4)
      SYMJ0(IOSYM0+4)=MURRY(6)
      SYMJ0(IOSYM0+5)=MURRY(7)
      SYMJ0(IOSYM0+6)=MURRY(9)
      SYMJ0(IOSYM0+7)=MURRY(11)
      SYMJ0(IOSYM0+8)=MURRY(13)
      SYMJ0(IOSYM0+9)=MURRY(15)
      SYMJ0(IOSYM0+10)=CONVU*(UVVAL+URVAL)
      SYMJ0(IOSYM0+11)=VCOEF1(2)
      SYMJ0(IOSYM0+12)=VCOEF1(4)
      SYMJ0(IOSYM0+13)=VCOEF1(6)
      SYMJ0(IOSYM0+14)=VCOEF1(7)
      SYMJ0(IOSYM0+15)=VCOEF1(9)
      SYMJ0(IOSYM0+16)=VCOEF1(11)
      SYMJ0(IOSYM0+17)=VCOEF1(13)
      SYMJ0(IOSYM0+18)=VCOEF1(15)
      SYMJ0(IOSYM0+19)=VCOEF2(2)
      SYMJ0(IOSYM0+20)=VCOEF2(4)
      SYMJ0(IOSYM0+21)=VCOEF2(6)
      SYMJ0(IOSYM0+22)=VCOEF2(7)
      SYMJ0(IOSYM0+23)=VCOEF2(9)
      SYMJ0(IOSYM0+24)=VCOEF2(11)
      SYMJ0(IOSYM0+25)=VCOEF2(13)
      SYMJ0(IOSYM0+26)=VCOEF2(15)
      SYMJ0(IOSYM0+27)=P1P3CY( 1)
      SYMJ0(IOSYM0+28)=P1P3CY( 2)
      SYMJ0(IOSYM0+29)=P1P3CY( 4)
      SYMJ0(IOSYM0+30)=P1P3CY( 6)
      SYMJ0(IOSYM0+31)=PXMXR1(2)+PRMRR1(2)
      SYMJ0(IOSYM0+32)=PXMXR1(3)+PRMRR1(3)
      SYMJ0(IOSYM0+33)=PXMXR1(4)+PRMRR1(4)
      SYMJ0(IOSYM0+34)=PXMXR1(5)+PRMRR1(5)
      SYMJ0(IOSYM0+35)=PXMXR1(6)+PRMRR1(6)
      SYMJ0(IOSYM0+36)=PXMXR1(7)+PRMRR1(7)
      SYMJ0(IOSYM0+37)=PXMXR1(8)+PRMRR1(8)
      SYMJ0(IOSYM0+38)=PXMXR1(9)+PRMRR1(9)
      SYMJ0(IOSYM0+39)=PXMXR1(10)+PRMRR1(10)
      SYMJ0(IOSYM0+40)=SOCOEY(1)
      SYMJ0(IOSYM0+41)=SOCOEY(2)
      SYMJ0(IOSYM0+42)=SOCOEY(4)
      SYMJ0(IOSYM0+43)=SOCOEY(6)
      SYMJ0(IOSYM0+44)=SOCOEY(7)
      SYMJ0(IOSYM0+45)=SOCOEY(9)
      SYMJ0(IOSYM0+46)=SOCOEY(11)
      SYMJ0(IOSYM0+47)=SOCOEY(13)
      SYMJ0(IOSYM0+48)=SOCOEY(15)
      SYMJ0(IOSYM0+49)=DMMMZ(1)
      SYMJ0(IOSYM0+50)=DMMMZ(2)
      SYMJ0(IOSYM0+51)=DMMMZ(4)
      SYMJ0(IOSYM0+52)=DMMMZ(6)
      SYMJ0(IOSYM0+53)=DMMMZ(7)
      SYMJ0(IOSYM0+54)=DMMMZ(9)
      SYMJ0(IOSYM0+55)=DMMMZ(11)
      SYMJ0(IOSYM0+56)=DMMMZ(13)
      SYMJ0(IOSYM0+57)=DMMMZ(15)
      SYMJ0(IOSYM0+58)=DMPPZ(1)
      SYMJ0(IOSYM0+59)=DMPPZ(2)
      SYMJ0(IOSYM0+60)=DMPPZ(4)
      SYMJ0(IOSYM0+61)=DMPPZ(6)
      SYMJ0(IOSYM0+62)=DMPPZ(7)
      SYMJ0(IOSYM0+63)=DMPPZ(9)
      SYMJ0(IOSYM0+64)=DMPPZ(11)
      SYMJ0(IOSYM0+65)=DMPPZ(13)
      SYMJ0(IOSYM0+66)=DMPPZ(15)
      ASYJ0(IOASY0+1)=MURRY(3)
      ASYJ0(IOASY0+2)=MURRY(5)
      ASYJ0(IOASY0+3)=MURRY(8)
      ASYJ0(IOASY0+4)=MURRY(10)
      ASYJ0(IOASY0+5)=MURRY(12)
      ASYJ0(IOASY0+6)=MURRY(14)
      ASYJ0(IOASY0+7)=VCOEF1(3)
      ASYJ0(IOASY0+8)=VCOEF1(5)
      ASYJ0(IOASY0+9)=VCOEF1(8)
      ASYJ0(IOASY0+10)=VCOEF1(10)
      ASYJ0(IOASY0+11)=VCOEF1(12)
      ASYJ0(IOASY0+12)=VCOEF1(14)
      ASYJ0(IOASY0+13)=VCOEF2(3)
      ASYJ0(IOASY0+14)=VCOEF2(5)
      ASYJ0(IOASY0+15)=VCOEF2(8)
      ASYJ0(IOASY0+16)=VCOEF2(10)
      ASYJ0(IOASY0+17)=VCOEF2(12)
      ASYJ0(IOASY0+18)=VCOEF2(14)
      ASYJ0(IOASY0+19)=P1P3CY( 3)
      ASYJ0(IOASY0+20)=P1P3CY( 5)
      ASYJ0(IOASY0+21)=PXMXR3(2)+PRMRR3(2)
      ASYJ0(IOASY0+22)=PXMXR3(3)+PRMRR3(3)
      ASYJ0(IOASY0+23)=PXMXR3(4)+PRMRR3(4)
      ASYJ0(IOASY0+24)=PXMXR3(5)+PRMRR3(5)
      ASYJ0(IOASY0+25)=PXMXR3(6)+PRMRR3(6)
      ASYJ0(IOASY0+26)=PXMXR3(7)+PRMRR3(7)
      ASYJ0(IOASY0+27)=PXMXR3(8)+PRMRR3(8)
      ASYJ0(IOASY0+28)=PXMXR3(9)+PRMRR3(9)
      ASYJ0(IOASY0+29)=PXMXR3(10)+PRMRR3(10)
      ASYJ0(IOASY0+30)=SOCOEY(3)
      ASYJ0(IOASY0+31)=SOCOEY(5)
      ASYJ0(IOASY0+32)=SOCOEY(8)
      ASYJ0(IOASY0+33)=SOCOEY(10)
      ASYJ0(IOASY0+34)=SOCOEY(12)
      ASYJ0(IOASY0+35)=SOCOEY(14)
      ASYJ0(IOASY0+36)=DMMMZ(3)
      ASYJ0(IOASY0+37)=DMMMZ(5)
      ASYJ0(IOASY0+38)=DMMMZ(8)
      ASYJ0(IOASY0+39)=DMMMZ(10)
      ASYJ0(IOASY0+40)=DMMMZ(12)
      ASYJ0(IOASY0+41)=DMMMZ(14)
      ASYJ0(IOASY0+42)=DMPPZ(3)
      ASYJ0(IOASY0+43)=DMPPZ(5)
      ASYJ0(IOASY0+44)=DMPPZ(8)
      ASYJ0(IOASY0+45)=DMPPZ(10)
      ASYJ0(IOASY0+46)=DMPPZ(12)
      ASYJ0(IOASY0+47)=DMPPZ(14)
      SYMJP(IOSYMJ+1)=MUXXY(1)
      SYMJP(IOSYMJ+2)=MUXXY(2)
      SYMJP(IOSYMJ+3)=MUXXY(4)
      SYMJP(IOSYMJ+4)=MUXXY(6)
      SYMJP(IOSYMJ+5)=MUXXY(7)
      SYMJP(IOSYMJ+6)=MUXXY(9)
      SYMJP(IOSYMJ+7)=MUXXY(11)
      SYMJP(IOSYMJ+8)=MUXXY(13)
      SYMJP(IOSYMJ+9)=MUXXY(15)
      SYMJP(IOSYMJ+10)=MUYYY(1)
      SYMJP(IOSYMJ+11)=MUYYY(2)
      SYMJP(IOSYMJ+12)=MUYYY(4)
      SYMJP(IOSYMJ+13)=MUYYY(6)
      SYMJP(IOSYMJ+14)=MUYYY(7)
      SYMJP(IOSYMJ+15)=MUYYY(9)
      SYMJP(IOSYMJ+16)=MUYYY(11)
      SYMJP(IOSYMJ+17)=MUYYY(13)
      SYMJP(IOSYMJ+18)=MUYYY(15)
      SYMJP(IOSYMJ+19)=MUZZY(1)
      SYMJP(IOSYMJ+20)=MUZZY(2)
      SYMJP(IOSYMJ+21)=MUZZY(4)
      SYMJP(IOSYMJ+22)=MUZZY(6)
      SYMJP(IOSYMJ+23)=MUZZY(7)
      SYMJP(IOSYMJ+24)=MUZZY(9)
      SYMJP(IOSYMJ+25)=MUZZY(11)
      SYMJP(IOSYMJ+26)=MUZZY(13)
      SYMJP(IOSYMJ+27)=MUZZY(15)
      SYMJP(IOSYMJ+28)=MUYZY(2)
      SYMJP(IOSYMJ+29)=MUYZY(4)
      SYMJP(IOSYMJ+30)=MUYZY(6)
      SYMJP(IOSYMJ+31)=MUYZY(7)
      SYMJP(IOSYMJ+32)=MUYZY(9)
      SYMJP(IOSYMJ+33)=MUYZY(11)
      SYMJP(IOSYMJ+34)=MUYZY(13)
      SYMJP(IOSYMJ+35)=MUYZY(15)
      SYMJP(IOSYMJ+36)=MUXRY(1)
      SYMJP(IOSYMJ+37)=MUXRY(2)
      SYMJP(IOSYMJ+38)=MUXRY(4)
      SYMJP(IOSYMJ+39)=MUXRY(6)
      SYMJP(IOSYMJ+40)=MUXRY(7)
      SYMJP(IOSYMJ+41)=MUXRY(9)
      SYMJP(IOSYMJ+42)=MUXRY(11)
      SYMJP(IOSYMJ+43)=MUXRY(13)
      SYMJP(IOSYMJ+44)=MUXRY(15)
      SYMJP(IOSYMJ+45)=PXMXX1(2)+PRMXR1(2)
      SYMJP(IOSYMJ+46)=PXMXX1(3)+PRMXR1(3)
      SYMJP(IOSYMJ+47)=PXMXX1(4)+PRMXR1(4)
      SYMJP(IOSYMJ+48)=PXMXX1(5)+PRMXR1(5)
      SYMJP(IOSYMJ+49)=PXMXX1(6)+PRMXR1(6)
      SYMJP(IOSYMJ+50)=PXMXX1(7)+PRMXR1(7)
      SYMJP(IOSYMJ+51)=PXMXX1(8)+PRMXR1(8)
      SYMJP(IOSYMJ+52)=PXMXX1(9)+PRMXR1(9)
      SYMJP(IOSYMJ+53)=PXMXX1(10)+PRMXR1(10)
      SYMJP(IOSYMJ+54)=DMMMY(1)
      SYMJP(IOSYMJ+55)=DMMMY(2)
      SYMJP(IOSYMJ+56)=DMMMY(4)
      SYMJP(IOSYMJ+57)=DMMMY(6)
      SYMJP(IOSYMJ+58)=DMMMY(7)
      SYMJP(IOSYMJ+59)=DMMMY(9)
      SYMJP(IOSYMJ+60)=DMMMY(11)
      SYMJP(IOSYMJ+61)=DMMMY(13)
      SYMJP(IOSYMJ+62)=DMMMY(15)
      SYMJP(IOSYMJ+63)=DMPPY(1)
      SYMJP(IOSYMJ+64)=DMPPY(2)
      SYMJP(IOSYMJ+65)=DMPPY(4)
      SYMJP(IOSYMJ+66)=DMPPY(6)
      SYMJP(IOSYMJ+67)=DMPPY(7)
      SYMJP(IOSYMJ+68)=DMPPY(9)
      SYMJP(IOSYMJ+69)=DMPPY(11)
      SYMJP(IOSYMJ+70)=DMPPY(13)
      SYMJP(IOSYMJ+71)=DMPPY(15)
      SYMJP(IOSYMJ+72)=DMMPX(1)
      SYMJP(IOSYMJ+73)=DMMPX(2)
      SYMJP(IOSYMJ+74)=DMMPX(4)
      SYMJP(IOSYMJ+75)=DMMPX(6)
      SYMJP(IOSYMJ+76)=DMMPX(7)
      SYMJP(IOSYMJ+77)=DMMPX(9)
      SYMJP(IOSYMJ+78)=DMMPX(11)
      SYMJP(IOSYMJ+79)=DMMPX(13)
      SYMJP(IOSYMJ+80)=DMMPX(15)
      ASYJP(IOASYJ+1)=MUXXY(3)
      ASYJP(IOASYJ+2)=MUXXY(5)
      ASYJP(IOASYJ+3)=MUXXY(8)
      ASYJP(IOASYJ+4)=MUXXY(10)
      ASYJP(IOASYJ+5)=MUXXY(12)
      ASYJP(IOASYJ+6)=MUXXY(14)
      ASYJP(IOASYJ+7)=MUYYY(3)
      ASYJP(IOASYJ+8)=MUYYY(5)
      ASYJP(IOASYJ+9)=MUYYY(8)
      ASYJP(IOASYJ+10)=MUYYY(10)
      ASYJP(IOASYJ+11)=MUYYY(12)
      ASYJP(IOASYJ+12)=MUYYY(14)
      ASYJP(IOASYJ+13)=MUZZY(3)
      ASYJP(IOASYJ+14)=MUZZY(5)
      ASYJP(IOASYJ+15)=MUZZY(8)
      ASYJP(IOASYJ+16)=MUZZY(10)
      ASYJP(IOASYJ+17)=MUZZY(12)
      ASYJP(IOASYJ+18)=MUZZY(14)
      ASYJP(IOASYJ+19)=MUYZY(1)
      ASYJP(IOASYJ+20)=MUYZY(3)
      ASYJP(IOASYJ+21)=MUYZY(5)
      ASYJP(IOASYJ+22)=MUYZY(8)
      ASYJP(IOASYJ+23)=MUYZY(10)
      ASYJP(IOASYJ+24)=MUYZY(12)
      ASYJP(IOASYJ+25)=MUYZY(14)
      ASYJP(IOASYJ+26)=MUXRY(3)
      ASYJP(IOASYJ+27)=MUXRY(5)
      ASYJP(IOASYJ+28)=MUXRY(8)
      ASYJP(IOASYJ+29)=MUXRY(10)
      ASYJP(IOASYJ+30)=MUXRY(12)
      ASYJP(IOASYJ+31)=MUXRY(14)
      ASYJP(IOASYJ+32)=PXMXX3(2)+PRMXR3(2)
      ASYJP(IOASYJ+33)=PXMXX3(3)+PRMXR3(3)
      ASYJP(IOASYJ+34)=PXMXX3(4)+PRMXR3(4)
      ASYJP(IOASYJ+35)=PXMXX3(5)+PRMXR3(5)
      ASYJP(IOASYJ+36)=PXMXX3(6)+PRMXR3(6)
      ASYJP(IOASYJ+37)=PXMXX3(7)+PRMXR3(7)
      ASYJP(IOASYJ+38)=PXMXX3(8)+PRMXR3(8)
      ASYJP(IOASYJ+39)=PXMXX3(9)+PRMXR3(9)
      ASYJP(IOASYJ+40)=PXMXX3(10)+PRMXR3(10)
      ASYJP(IOASYJ+41)=DMMMY(3)
      ASYJP(IOASYJ+42)=DMMMY(5)
      ASYJP(IOASYJ+43)=DMMMY(8)
      ASYJP(IOASYJ+44)=DMMMY(10)
      ASYJP(IOASYJ+45)=DMMMY(12)
      ASYJP(IOASYJ+46)=DMMMY(14)
      ASYJP(IOASYJ+47)=DMPPY(3)
      ASYJP(IOASYJ+48)=DMPPY(5)
      ASYJP(IOASYJ+49)=DMPPY(8)
      ASYJP(IOASYJ+50)=DMPPY(10)
      ASYJP(IOASYJ+51)=DMPPY(12)
      ASYJP(IOASYJ+52)=DMPPY(14)
      ASYJP(IOASYJ+53)=DMMPX(3)
      ASYJP(IOASYJ+54)=DMMPX(5)
      ASYJP(IOASYJ+55)=DMMPX(8)
      ASYJP(IOASYJ+56)=DMMPX(10)
      ASYJP(IOASYJ+57)=DMMPX(12)
      ASYJP(IOASYJ+58)=DMMPX(14)
C
1000  CONTINUE
C
      WRITE (NFIL1) (SYMJ0(L), L=1,KFSYM0)
      WRITE (NFIL2) (ASYJ0(L), L=1,KFASY0)
      WRITE (NFIL3) (SYMJP(L), L=1,KFSYMJ)
      WRITE (NFIL4) (ASYJP(L), L=1,KFASYJ)
C
C     REPLACED CGAMMA ROUTINE
C
      DO 820 KP1=1,JMAXP1
      KVAL = KP1 - 1
      INDB = KVAL*NSTINT
      SQUAR0=DFLOAT((KP1-1)*(KP1-1))
      DO 810 I=1,NSTINT
      IND =INDB+I
      RHO=DFLOAT(I)*HSTEP
      CALL CGAMMA ( KVAL , COSXX , SINXX , DGMDR , XMUZZ ,
     1              EPSC1 , EPSC2 , F2COEF )
      COSGM(IND)=COSXX
      SINGM(IND)=SINXX
      DGKDR(IND)=DGMDR
      AMUZZ(IND)=XMUZZ/CONPS2
810   CONTINUE
820   CONTINUE
      WRITE(NFIL46) (COSGM(L),L=1,NSTINT*JMAXP1)
      WRITE(NFIL47) (SINGM(L),L=1,NSTINT*JMAXP1)
      WRITE(NFIL48) (AMUZZ(L),L=1,NSTINT)
      WRITE(NFIL49) (DGKDR(L),L=1,NSTINT*JMAXP1)
C
C
      RETURN
      END
C
C
      SUBROUTINE MUTENS (  MUXXY , MUYYY , MUZZY ,
     2                    MUYZY , MURRY , MUXRY ,
     3                    PXMXX1  , PXMXX3 , PRMXR1 , PRMXR3 ,
     2                    PXMXR1  , PXMXR3 , PRMRR1 , PRMRR3 ,
     6                    MUZZIN  , MUYZIN,
     7                    DMMMY,DMMMZ,
     8                    DMPPY,DMPPZ,
     9                    DMMPX)
      IMPLICIT REAL*8 (A-H,O-Z)
C             :
C DATE        : 28.04.1986
C AUTHOR      : PER JENSEN
C UPDATES     :
C LANGUAGE    : FORTRAN
C PURPOSE     : CALCULATION OF THE EXPANSION COEFFICINTETS (IN THE
C             : S I'S, THE DELTA R I S, AND THE Y I'S) OF THE NON-
C             : VANISHING MU TENSOR ELEMENTS.
C SUBPROGRAMS :
C      CALLED : AMAT, TRNSSR, INVERT, TRNSRY
C             :
C INPUT       : RHO  INSTANTANEOUS VALUE OF THE BENDING COORDINATE
C             : EPS  INSTANTANEOUS VALUE OF THE ANGLE EPSILON DEFINED
C             :      IN P. JENSEN, COMP. PHYS. REP. 1, 1-55 (1983)
C             :
C OUTPUT      : MUABY(1:15) (AB = XX, YY, ZZ, RR, YZ, AND RX). EXPANSION
C             :             COEFFICIENTS OF THE MUAB TENSOR ELEMENT IN
C             :             TERMS OF THE YI PARAMETERS.
C             :
C             :
C    THE ARRAYS CONTAIN THE COEFFICIENTS OF THE FOLLOWING
C    QUANTITIES:
C
C    I             IABS(I)        IABR(I)           MUABY(I)
C  -------------------------------------------------------------
C    1             1              1                 1
C    2             S1             DR1               Y1
C    3             S3             DR3               Y3
C    4             S1**2          DR1**2            Y1**2
C    5             S3**2          DR3**2            Y3**2
C    6             S1*S3          DR1*DR3           Y1*Y3
C    7                            DR1**3            Y1**3
C    8                            DR3**3            Y3**3
C    9                            DR1**2*DR3        Y1**2*Y3
C   10                            DR1*DR3**2        Y1*Y3**2
C   11                            DR1**4            Y1**4
C   12                            DR3**4            Y3**4
C   13                            DR1**3*DR3        Y1**3*Y3
C   14                            DR1*DR3**3        Y1*Y3**3
C   15                            DR1**2*DR3**2     Y1**2*Y3**2
C
      REAL*8 M1,M2,M3,M,U1,U3,U13,V
C
      REAL*8 AMASS(3,10)
C
      REAL*8 RHOE,FA1,FA2,FA3,FA4,FA5,FA6,FA7,FA8,
     1       AA1,AA3,
     2       F1A1,F2A1,F3A1,F4A1,F1A3,F2A3,F3A3,F4A3,
     3       F11,F1A11,F2A11,F3A11,F33,F1A33,F2A33,F3A33,
     4       F13,F1A13,F2A13,F3A13,
     5       F111,F1A111,F2A111,F333,F1A333,F2A333,
     6       F113,F1A113,F2A113,F133,F1A133,F2A133,
     7       F1111,FA1111,F3333,FA3333,F1113,FA1113,
     8       F1333,FA1333,F1133,FA1133,
     8       RE12 , RE32 , RHOREF , VMIN
C
      REAL*8 ETRIAL , RHOMAX , PNM1 , HBASE , HSTEP , EGUESS ,
     1      PREC
C
      REAL*8 THRSH1 , THRSH2 , THRSH3 , THRSH4 , THRSH5 ,
     1      THRSH6 , THRSH7 , THRSH8 , THRSH9 , THRSHX ,
     2      VELLGT , PLANCK , AVOGNO , DEGRAD , RADDEG ,
     3      PI
C
      REAL*8 B11,B13,B111,B133,B113,
     2      B1111,B1333,B1113,B1133,
     3      B11111,B13333,B11113,B11333,B11133,
     4      B31,B33,B311,B333,B313,
     5      B3111,B3333,B3113,B3133,
     6      B31111,B33333,B31113,B31333,B31133
C
      REAL*8 CR1,CR3,CR11,CR33,CR13,
     2      CR111,CR333,CR113,CR133,
     3      CR1111,CR3333,CR1113,CR1333,CR1133
C
      INTEGER NFIL1 , NFIL2 , NFIL3 , NFIL4 , NFIL5 ,
     5       NFIL6 , NFIL7 , NFIL8 , NFIL9 , NFIL10 ,
     6       NFIL11 , NFIL12 , NFIL13 , NFIL14 , NFIL15 ,
     7       NFIL16 , NFIL17 , NFIL18 , NFIL19 , NFIL20 ,
     6       ITEST  , IPRINT , NSTNR , NSTNIN , IREST ,
     7       IISOT , IQUAS , ISYMS , NISOT , NQUAS ,
     8       NUMQUA , NOPTIT , NOPTIM , IOBSER , NOBSER,
     9       ISOMAX , NATTS  , V0TYPE , IVAR(128) , PARMAX ,
     1       NUMPAR , PRTINT
C
      INTEGER V1 ,V2, V3 , V2MXP1, V2P1,
     1       NSTINT , NSERIN , NSERP , NSERQ , KQUA , NTEST ,
     2       NSEPP2 , NSEQP1 , MBASIS ,
     3       MDIM , NFSYM0, NFASY0, NFSYMJ, NFASYJ,
     4       KSTYPA(2) , LSTYPA(2) , JMAX , V2MAX , JMAXP1
C
      REAL*8 DNYS(6),DNZS(6),CMYS(6),CMZS(6),V3YS(6),V3ZS(6),
     1       DNYR(15),DNZR(15),DNYY(15),DNZY(15),U3YR(15),U3ZR(15),
     2       REC32(15),V3ZR(15),V3YR(15),V1YS(6),V1ZS(6),
     2       REC12(15),V1ZR(15),V1YR(15),U1YR(15),U1ZR(15),
     3       CRRC(15),AUXIY(15),DMY(15),DMZ(15),
     4       AUXIZ(15),UPYR(15),UPZR(15),
     3       DMPARR(15),DMPERP(15),DMYR(15),DMZR(15)
C
      INTEGER IQUANT(9,10)
C
      LOGICAL SYMM
C
      REAL*8 RMK(2),AAS(2)
      INTEGER NOBAS,MBASP1,LENIW
      REAL*8 IXXS(6),IYYS(6),IZZS(6),IRRS(6),IYZS(6),IXRS(6),
     1       IXXR(15),IYYR(15),IZZR(15),IRRR(15),IYZR(15),IXRR(15),
     2       MUXXR(15),MUYYR(15),MUZZR(15),MURRR(15),
     3       MUYZR(15),MUXRR(15),
     4       MUXXY(15),MUYYY(15),MUZZY(15),MURRY(15),
     3       MUYZY(15),MUXRY(15),
     5       PX1R(15),PX3R(15),PR1R(15),PR3R(15),PX1Y(15),
     6       PX3Y(15),PR1Y(15),PR3Y(15),
     7       PXMXX1(15),PXMXX3(15),PRMXR1(15),PRMXR3(15),
     8       PXMXR1(15),PXMXR3(15),PRMRR1(15),PRMRR3(15),
     6       MUZZIN(15),MUYZIN(15)
      REAL*8  A1Y1,A1Z1,A2Y1,A2Z1,A3Y1,A3Z1,
     2       A1Y3,A1Z3,A2Y3,A2Z3,A3Y3,A3Z3,
     3       AP1Y1,AP1Z1,AP2Y1,AP2Z1,AP3Y1,AP3Z1,
     4       AP1Y3,AP1Z3,AP2Y3,AP2Z3,AP3Y3,AP3Z3,
     5       YE1,ZE1,YE2,ZE2,YE3,ZE3,
     6       YEP1,ZEP1,YEP2,ZEP2,YEP3,ZEP3,
     7       YEPP1,ZEPP1,YEPP2,ZEPP2,YEPP3,ZEPP3
      REAL*8  AMMA11,AMMA33,AMMA13,AMMA31,
     1       APMA11,APMA33,APMA13,APMA31,G11,G33,G13,G31,
     2       CHX11,CHX13,CHX31,CHX33,CHR11,CHR13,CHR31,CHR33
C
      include 'dipole.h'
C
      REAL*8 DIPMMY(53),
     1       DIPMMZ(53),
     2       DIPPPY(53),
     3       DIPPPZ(53),
     4       DIPMPX(53)
C
      REAL*8   AUXILI(15),
     1       SBARS(6),SBARR(15),AUXIR(15),AUXI2(15)
C
      COMMON /DIP/   IACT
      COMMON /DIPMM/ DIPMMY,DIPMMZ
      COMMON /DIPPP/ DIPPPY,DIPPPZ
      COMMON /DIPMP/ DIPMPX
      COMMON /CHARGE/ EC,ZC1,ZC2,ZC3,ZELEC
C
      REAL*8 DMMMY(15),DMMMZ(15),
     1       DMPPY(15),DMPPZ(15),
     2       DMMPX(15),
     3       DMMPXR(15)
      INTEGER ZC1,ZC2,ZC3,ZELEC
      REAL*8 EC
C
      include 'isotop.h'
      include 'value.h'
      include 'molcul.h'
      include 'integ.h'
      include 'dimen.h'
      include 'lsfit.h'
      include 'rensys.h'
      include 'bcoeff.h'
      include 'crcoef.h'
      include 'morse.h'
      include 'modim.h'
C
      IXXS(1)=(U1+U3+2.0E0*U13*CR)/M
      IYYS(1)=(U1*CRE**2+U3*CSE**2+2.0E0*U13*CSE*CRE)/M
      IZZS(1)=(U1*SRE**2+U3*SNE**2-2.0E0*U13*SNE*SRE)/M
      IYZS(1)=(U1*SIN(2.0E0*(RHO-EPS))-U3*SIN(2.0E0*EPS)
     1        +2.0E0*U13*SIN(RHO-2.0E0*EPS))/(2.0E0*M)
      IRRS(1)=(U1*U3-U13*U13*CR*CR)/(U1+U3+2.0E+00*U13*CR)/M
      IXRS(1)=0.0E0
C
C UPON INPUT OF RHO AND EPS, THE SUBROUTINE AMAT CALCULATES THE
C NECESSARY VALUES OF THE A MATRIX ELEMENTS, THE A PRIME
C MATRIX ELEMENTS, THE A VECTOR COMPONENTS AND THEIR FIRST
C AND SECOND DERIVATIVES.
C
      CALL AMAT ( A1Y1,A1Z1,A2Y1,A2Z1,A3Y1,A3Z1,
     2           A1Y3,A1Z3,A2Y3,A2Z3,A3Y3,A3Z3,
     3           AP1Y1,AP1Z1,AP2Y1,AP2Z1,AP3Y1,AP3Z1,
     4           AP1Y3,AP1Z3,AP2Y3,AP2Z3,AP3Y3,AP3Z3,
     5           YE1,ZE1,YE2,ZE2,YE3,ZE3,
     6           YEP1,ZEP1,YEP2,ZEP2,YEP3,ZEP3,
     7           YEPP1,ZEPP1,YEPP2,ZEPP2,YEPP3,ZEPP3)
C
C     THE FOLLOWING EXPRESSIONS FOR EXPANSION COEFFICIENTS OF
C     THE I TENSOR ELEMENTS IN TERMS OF THE SI COORDINATES ARE
C     TAKEN FROM EQ. (20) OF J. HOUGEN, P.R. BUNKER, AND
C     J.W.C. JOHNS, J. MOL. SPECTROSC. 34, 136-172 (1970).
C
      IYYS(2)=
     1 2.0E+00*(M1*ZE1*A1Z1+M2*ZE2*A2Z1+M3*ZE3*A3Z1)
      IYYS(3)=
     1 2.0E+00*(M1*ZE1*A1Z3+M2*ZE2*A2Z3+M3*ZE3*A3Z3)
      IYYS(4)=
     1  M1*A1Z1*A1Z1
     2 +M2*A2Z1*A2Z1
     3 +M3*A3Z1*A3Z1
      IYYS(5)=
     1  M1*A1Z3*A1Z3
     2 +M2*A2Z3*A2Z3
     3 +M3*A3Z3*A3Z3
      IYYS(6)=
     1  2.0E+00*(M1*A1Z1*A1Z3
     2          +M2*A2Z1*A2Z3
     3          +M3*A3Z1*A3Z3)
      IZZS(2)=
     1 2.0E+00*(M1*YE1*A1Y1+M2*YE2*A2Y1+M3*YE3*A3Y1)
      IZZS(3)=
     1 2.0E+00*(M1*YE1*A1Y3+M2*YE2*A2Y3+M3*YE3*A3Y3)
      IZZS(4)=
     1  M1*A1Y1*A1Y1
     2 +M2*A2Y1*A2Y1
     3 +M3*A3Y1*A3Y1
      IZZS(5)=
     1  M1*A1Y3*A1Y3
     2 +M2*A2Y3*A2Y3
     3 +M3*A3Y3*A3Y3
      IZZS(6)=
     1  2.0E+00*(M1*A1Y1*A1Y3
     2          +M2*A2Y1*A2Y3
     3          +M3*A3Y1*A3Y3)
      IXXS(1)=IYYS(1)+IZZS(1)
      IXXS(2)=IYYS(2)+IZZS(2)
      IXXS(3)=IYYS(3)+IZZS(3)
      IXXS(4)=IYYS(4)+IZZS(4)
      IXXS(5)=IYYS(5)+IZZS(5)
      IXXS(6)=IYYS(6)+IZZS(6)
      IYZS(2)=
     1 -(M1*YE1*A1Z1+M2*YE2*A2Z1+M3*YE3*A3Z1)
     2 -(M1*ZE1*A1Y1+M2*ZE2*A2Y1+M3*ZE3*A3Y1)
      IYZS(3)=
     1 -(M1*YE1*A1Z3+M2*YE2*A2Z3+M3*YE3*A3Z3)
     2 -(M1*ZE1*A1Y3+M2*ZE2*A2Y3+M3*ZE3*A3Y3)
      IYZS(4)=
     1 -M1*A1Y1*A1Z1
     2 -M2*A2Y1*A2Z1
     3 -M3*A3Y1*A3Z1
      IYZS(5)=
     1 -M1*A1Y3*A1Z3
     2 -M2*A2Y3*A2Z3
     3 -M3*A3Y3*A3Z3
      IYZS(6)=
     1 -M1*(A1Y1*A1Z3+A1Y3*A1Z1)
     2 -M2*(A2Y1*A2Z3+A2Y3*A2Z1)
     3 -M3*(A3Y1*A3Z3+A3Y3*A3Z1)
      IXRS(2)=
     1 -2.0E+00*(M1*(YEP1*A1Z1-ZEP1*A1Y1)
     2          +M2*(YEP2*A2Z1-ZEP2*A2Y1)
     3          +M3*(YEP3*A3Z1-ZEP3*A3Y1))
      IXRS(3)=
     1 -2.0E+00*(M1*(YEP1*A1Z3-ZEP1*A1Y3)
     2          +M2*(YEP2*A2Z3-ZEP2*A2Y3)
     3          +M3*(YEP3*A3Z3-ZEP3*A3Y3))
      IXRS(4)=
     1  M1*(A1Y1*AP1Z1-A1Z1*AP1Y1)
     2 +M2*(A2Y1*AP2Z1-A2Z1*AP2Y1)
     3 +M3*(A3Y1*AP3Z1-A3Z1*AP3Y1)
      IXRS(5)=
     1  M1*(A1Y3*AP1Z3-A1Z3*AP1Y3)
     2 +M2*(A2Y3*AP2Z3-A2Z3*AP2Y3)
     3 +M3*(A3Y3*AP3Z3-A3Z3*AP3Y3)
      IXRS(6)=
     1           M1*(A1Y1*AP1Z3-A1Z1*AP1Y3)
     2          +M2*(A2Y1*AP2Z3-A2Z1*AP2Y3)
     3          +M3*(A3Y1*AP3Z3-A3Z1*AP3Y3)
     1          +M1*(A1Y3*AP1Z1-A1Z3*AP1Y1)
     2          +M2*(A2Y3*AP2Z1-A2Z3*AP2Y1)
     3          +M3*(A3Y3*AP3Z1-A3Z3*AP3Y1)
      IRRS(2)=
     1 -2.0E+00*(M1*(YEPP1*A1Y1+ZEPP1*A1Z1)
     2          +M2*(YEPP2*A2Y1+ZEPP2*A2Z1)
     3          +M3*(YEPP3*A3Y1+ZEPP3*A3Z1))
      IRRS(3)=
     1 -2.0E+00*(M1*(YEPP1*A1Y3+ZEPP1*A1Z3)
     2          +M2*(YEPP2*A2Y3+ZEPP2*A2Z3)
     3          +M3*(YEPP3*A3Y3+ZEPP3*A3Z3))
      IRRS(4)=
     1  M1*(AP1Y1*AP1Y1+AP1Z1*AP1Z1)
     2 +M2*(AP2Y1*AP2Y1+AP2Z1*AP2Z1)
     3 +M3*(AP3Y1*AP3Y1+AP3Z1*AP3Z1)
      IRRS(5)=
     1  M1*(AP1Y3*AP1Y3+AP1Z3*AP1Z3)
     2 +M2*(AP2Y3*AP2Y3+AP2Z3*AP2Z3)
     3 +M3*(AP3Y3*AP3Y3+AP3Z3*AP3Z3)
      IRRS(6)=
     1  2.0E+00*(M1*(AP1Y1*AP1Y3+AP1Z1*AP1Z3)
     2          +M2*(AP2Y1*AP2Y3+AP2Z1*AP2Z3)
     3          +M3*(AP3Y1*AP3Y3+AP3Z1*AP3Z3))
C
C     THE FOLLOWING EXPRESSIONS ENTER INTO EQ. (17) OF
C     T. HOUGEN, P.R. BUNKER, AND J.W.C. JOHNS, J. MOL.
C     SPECTROSC. 34, 136-172 (1970). THEY ARE USED TO
C     CALCULATE THE I PRIME TENSOR FROM THE I TENSOR.
C
C       CALCULATION OF (A TR M M ALPHA A)
      AMMA11=0.0E0
      AMMA33=0.0E0
      AMMA13=
     1  M1*(A1Y1*A1Z3-A1Z1*A1Y3)
     2 +M2*(A2Y1*A2Z3-A2Z1*A2Y3)
     3 +M3*(A3Y1*A3Z3-A3Z1*A3Y3)
      AMMA31=-AMMA13
C       CALCULATION OF (AP TR M A)
      APMA11=
     1  M1*(AP1Y1*A1Y1+AP1Z1*A1Z1)
     2 +M2*(AP2Y1*A2Y1+AP2Z1*A2Z1)
     3 +M3*(AP3Y1*A3Y1+AP3Z1*A3Z1)
      APMA33=
     1  M1*(AP1Y3*A1Y3+AP1Z3*A1Z3)
     2 +M2*(AP2Y3*A2Y3+AP2Z3*A2Z3)
     3 +M3*(AP3Y3*A3Y3+AP3Z3*A3Z3)
      APMA13=
     1  M1*(AP1Y1*A1Y3+AP1Z1*A1Z3)
     2 +M2*(AP2Y1*A2Y3+AP2Z1*A2Z3)
     3 +M3*(AP3Y1*A3Y3+AP3Z1*A3Z3)
      APMA31=
     1  M1*(AP1Y3*A1Y1+AP1Z3*A1Z1)
     2 +M2*(AP2Y3*A2Y1+AP2Z3*A2Z1)
     3 +M3*(AP3Y3*A3Y1+AP3Z3*A3Z1)
      G11=(M1+M2)/(M1*M2)
      G33=(M3+M2)/(M3*M2)
      G13=-CR/M2
      G31=G13
      IXXS(4) = IXXS(4) -
     1                 (AMMA11*G11*AMMA11+AMMA13*G33*AMMA13
     2                 +AMMA11*G13*AMMA13+AMMA13*G31*AMMA11)
      IXXS(5) = IXXS(5) -
     1                 (AMMA31*G11*AMMA31+AMMA33*G33*AMMA33
     2                 +AMMA31*G13*AMMA33+AMMA33*G31*AMMA31)
      IXXS(6) = IXXS(6) -
     1            (AMMA11*G11*AMMA31+AMMA13*G33*AMMA33
     2            +AMMA11*G13*AMMA33+AMMA13*G31*AMMA31
     1            +AMMA31*G11*AMMA11+AMMA33*G33*AMMA13
     2            +AMMA31*G13*AMMA13+AMMA33*G31*AMMA11)
      IRRS(4) = IRRS(4) -
     1                 (APMA11*G11*APMA11+APMA13*G33*APMA13
     2                 +APMA11*G13*APMA13+APMA13*G31*APMA11)
      IRRS(5) = IRRS(5) -
     1                 (APMA31*G11*APMA31+APMA33*G33*APMA33
     2                 +APMA31*G13*APMA33+APMA33*G31*APMA31)
      IRRS(6) = IRRS(6) -
     1             (APMA11*G11*APMA31+APMA13*G33*APMA33
     2             +APMA11*G13*APMA33+APMA13*G31*APMA31
     1             +APMA31*G11*APMA11+APMA33*G33*APMA13
     2             +APMA31*G13*APMA13+APMA33*G31*APMA11)
      IXRS(4) = IXRS(4) -
     1                 (AMMA11*G11*APMA11+AMMA13*G33*APMA13
     2                 +AMMA11*G13*APMA13+AMMA13*G31*APMA11)
      IXRS(5) = IXRS(5) -
     1                 (AMMA31*G11*APMA31+AMMA33*G33*APMA33
     2                 +AMMA31*G13*APMA33+AMMA33*G31*APMA31)
      IXRS(6) = IXRS(6) -
     1              (AMMA11*G11*APMA31+AMMA13*G33*APMA33
     2              +AMMA11*G13*APMA33+AMMA13*G31*APMA31
     1              +AMMA31*G11*APMA11+AMMA33*G33*APMA13
     2              +AMMA31*G13*APMA13+AMMA33*G31*APMA11)
C
C     CONVERT FROM POLYNOMIALS IN S TO POLYNOMIALS IN DELTA R
C
      CALL TRNSSR ( IXXS , IXXR )
      CALL TRNSSR ( IYYS , IYYR )
      CALL TRNSSR ( IZZS , IZZR )
      CALL TRNSSR ( IYZS , IYZR )
      CALL TRNSSR ( IRRS , IRRR )
      CALL TRNSSR ( IXRS , IXRR )
C
C     CONVERT THE X-RHO CORNER OF THE I TENSOR TO MU TENSOR
C     ELEMENTS
C
      CALL INVERT  ( IXXR , IRRR , IXRR , MUXXR , MURRR , MUXRR )
C
C     CONVERT THE Y-Z CORNER OF THE I TENSOR TO MU TENSOR
C     ELEMENTS
C
      CALL INVERT  ( IYYR , IZZR , IYZR , MUYYR , MUZZR , MUYZR )
C
C     CONVERT FROM POLYNOMIALS IN DELTA R TO POLYNOMIALS IN Y
C
      CALL TRNSRY ( MUXXR , MUXXY )
      CALL TRNSRY ( MUYYR , MUYYY )
      CALL TRNSRY ( MUZZR , MUZZY )
C
      DO 10 KK=1,15
10    MUZZIN(KK)=MUZZY(KK)
C
      CALL TRNSRY ( MUYZR , MUYZY )
C
      DO 20 KK=1,15
20    MUYZIN(KK)=MUYZY(KK)
C
      CALL TRNSRY ( MURRR , MURRY )
      CALL TRNSRY ( MUXRR , MUXRY )
      CHX11=AMMA11*G11+AMMA13*G31
      CHX13=AMMA11*G13+AMMA13*G33
      CHX31=AMMA31*G11+AMMA33*G31
      CHX33=AMMA31*G13+AMMA33*G33
      CHR11=APMA11*G11+APMA13*G31
      CHR13=APMA11*G13+APMA13*G33
      CHR31=APMA31*G11+APMA33*G31
      CHR33=APMA31*G13+APMA33*G33
C
C     CALCULATION OF THE EXPANSION COEFFICIENTS OF THE VIBRATIONAL
C     ANGULAR MOMENTA P SUB X AND P SUB RHO.
C
      CALL VIBRAM ( CHX11 , CHX13 , CHX31 , CHX33 ,
     1             CHR11 , CHR13 , CHR31 , CHR33 ,
     2             PX1R  , PX3R  , PR1R  , PR3R  )
C
      CALL TRNSRY ( PX1R , PX1Y )
      CALL TRNSRY ( PX3R , PX3Y )
      CALL TRNSRY ( PR1R , PR1Y )
      CALL TRNSRY ( PR3R , PR3Y )
C
C     CALCULATION OF THE EXPANSION COEFFICIENTS OF THE PRODUCTS OF
C     THE VIBRATIONAL ANGULAR MOMENTA P SUB X AND P SUB RHO WITH
C     THE RELEVANT MU TENSOR ELEMENTS FOR THE CORIOLIS TERMS IN
C     THE RENTEL SCHEME.
C
      CALL MUPV ( MUXXY , PX1Y , PX3Y , PXMXX1 , PXMXX3 )
      CALL MUPV ( MUXRY , PR1Y , PR3Y , PRMXR1 , PRMXR3 )
      CALL MUPV ( MUXRY , PX1Y , PX3Y , PXMXR1 , PXMXR3 )
      CALL MUPV ( MURRY , PR1Y , PR3Y , PRMRR1 , PRMRR3 )
C
C
C     CALCULATION OF THE EXPANSION COEFFICIENTS OF THE PRODUCTS OF
C     THE VIBRATIONAL ANGULAR MOMENTA P SUB X AND P SUB RHO WITH
C     THE RELEVANT MU TENSOR ELEMENTS FOR THE CORIOLIS TERMS IN
C     THE MORBID SCHEME.
C
      CALL MUPV ( MUXXY , PX1Y , PX3Y , PXMXX1 , PXMXX3 )
      CALL MUPV ( MUXRY , PR1Y , PR3Y , PRMXR1 , PRMXR3 )
      CALL MUPV ( MUXRY , PX1Y , PX3Y , PXMXR1 , PXMXR3 )
      CALL MUPV ( MURRY , PR1Y , PR3Y , PRMRR1 , PRMRR3 )
C
C     Verzweigung
C
      IF (IACT.GE.1) THEN 
C
C     CALCULATE CENTER-OF-MASS COORDINATES FOR THE REFERENCE
C     MOLECULE (EXPANSION COEFFIENTS IN THE S EXPANSION)
C
      REFM1=AMASS(1,1)
      REFM2=AMASS(2,1)
      REFM3=AMASS(3,1)
      TMREF=REFM1+REFM2+REFM3
      CMYS(1)=(REFM1*YE1 + REFM2*YE2 + REFM3*YE3)/TMREF
      CMYS(2)=(REFM1*A1Y1 + REFM2*A2Y1 + REFM3*A3Y1)/TMREF
      CMYS(3)=(REFM1*A1Y3 + REFM2*A2Y3 + REFM3*A3Y3)/TMREF
      CMYS(4)=0.0D+00
      CMYS(5)=0.0D+00
      CMYS(6)=0.0D+00
      CMZS(1)=(REFM1*ZE1 + REFM2*ZE2 + REFM3*ZE3)/TMREF
      CMZS(2)=(REFM1*A1Z1 + REFM2*A2Z1 + REFM3*A3Z1)/TMREF
      CMZS(3)=(REFM1*A1Z3 + REFM2*A2Z3 + REFM3*A3Z3)/TMREF
      CMZS(4)=0.0D+00
      CMZS(5)=0.0D+00
      CMZS(6)=0.0D+00
C
C     CALCULATE NUCLEAR DIPOLE MOMENT COORDINATES
C     (EXPANSION COEFFIENTS IN THE S EXPANSION)
C
C
      DNYS(1)=(ZC1*YE1 + ZC2*YE2 + ZC3*YE3
     .        -ZELEC*CMYS(1))*EC
      DNYS(2)=(ZC1*A1Y1 + ZC2*A2Y1 + ZC3*A3Y1
     .        -ZELEC*CMYS(2))*EC
      DNYS(3)=(ZC1*A1Y3 + ZC2*A2Y3 + ZC3*A3Y3
     .        -ZELEC*CMYS(3))*EC
      DNYS(4)=0.0D+00
      DNYS(5)=0.0D+00
      DNYS(6)=0.0D+00
      DNZS(1)=(ZC1*ZE1 + ZC2*ZE2 + ZC3*ZE3
     .        -ZELEC*CMZS(1))*EC
      DNZS(2)=(ZC1*A1Z1 + ZC2*A2Z1 + ZC3*A3Z1
     .        -ZELEC*CMZS(2))*EC
      DNZS(3)=(ZC1*A1Z3 + ZC2*A2Z3 + ZC3*A3Z3
     .        -ZELEC*CMZS(3))*EC
      DNZS(4)=0.0D+00
      DNZS(5)=0.0D+00
      DNZS(6)=0.0D+00
C
C     TRANSFORM TO POLYNOMIALS IN THE DELTA R'S
C
      CALL TRNSSR ( DNYS , DNYR )
      CALL TRNSSR ( DNZS , DNZR )
C
C     TRANSFORM TO POLYNOMIALS IN THE Y'S
C
      CALL TRNSRY ( DNYR , DNYY )
      CALL TRNSRY ( DNZR , DNZY )
C
C     CALCULATE COORDINATES FOR 2-1 VECTOR
C     (EXPANSION COEFFIENTS IN THE S EXPANSION)
C
C
      V1YS(1)=YE1-YE2
      V1YS(2)=A1Y1-A2Y1
      V1YS(3)=A1Y3-A2Y3
      V1YS(4)=0.0D+00
      V1YS(5)=0.0D+00
      V1YS(6)=0.0D+00
      V1ZS(1)=ZE1-ZE2
      V1ZS(2)=A1Z1-A2Z1
      V1ZS(3)=A1Z3-A2Z3
      V1ZS(4)=0.0D+00
      V1ZS(5)=0.0D+00
      V1ZS(6)=0.0D+00
C
C     TRANSFORM TO POLYNOMIALS IN THE DELTA R'S
C
      CALL TRNSSR ( V1YS , V1YR )
      CALL TRNSSR ( V1ZS , V1ZR )
C
C     PREPARE EXPANSION COEFFICIENTS FOR 1/R12
C
      REC12( 1)=1.0D+00/RE12
      REC12( 2)=-1.0D+00/RE12**2
      REC12( 3)=0.0D+00
      REC12( 4)=1.0D+00/RE12**3
      REC12( 5)=0.0D+00
      REC12( 6)=0.0D+00
      REC12( 7)=-1.0D+00/RE12**4
      REC12( 8)=0.0D+00
      REC12( 9)=0.0D+00
      REC12(10)=0.0D+00
      REC12(11)=1.0D+00/RE12**5
      REC12(12)=0.0D+00
      REC12(13)=0.0D+00
      REC12(14)=0.0D+00
      REC12(15)=0.0D+00
C
C     CALCULATE COORDINATES OF UNIT VECTOR IN THE
C     2-1 DIRECTION. THE EXPANSION COEFFICIENTS ARE
C     CONTAINED IN THE ARRAYS U1YR AND U1ZR
C
      CALL PLMLT2 ( REC12 , V1YR , U1YR )
      CALL PLMLT2 ( REC12 , V1ZR , U1ZR )
C
C     CALCULATE COORDINATES FOR 2-3 VECTOR
C     (EXPANSION COEFFIENTS IN THE S EXPANSION)
C
C
      V3YS(1)=YE3-YE2
      V3YS(2)=A3Y1-A2Y1
      V3YS(3)=A3Y3-A2Y3
      V3YS(4)=0.0D+00
      V3YS(5)=0.0D+00
      V3YS(6)=0.0D+00
      V3ZS(1)=ZE3-ZE2
      V3ZS(2)=A3Z1-A2Z1
      V3ZS(3)=A3Z3-A2Z3
      V3ZS(4)=0.0D+00
      V3ZS(5)=0.0D+00
      V3ZS(6)=0.0D+00
C
C     TRANSFORM TO POLYNOMIALS IN THE DELTA R'S
C
      CALL TRNSSR ( V3YS , V3YR )
      CALL TRNSSR ( V3ZS , V3ZR )
C
C     PREPARE EXPANSION COEFFICIENTS FOR 1/R32
C
      REC32( 1)=1.0D+00/RE32
      REC32( 2)=0.0D+00
      REC32( 3)=-1.0D+00/RE32**2
      REC32( 4)=0.0D+00
      REC32( 5)=1.0D+00/RE32**3
      REC32( 6)=0.0D+00
      REC32( 7)=0.0D+00
      REC32( 8)=-1.0D+00/RE32**4
      REC32( 9)=0.0D+00
      REC32(10)=0.0D+00
      REC32(11)=0.0D+00
      REC32(12)=1.0D+00/RE32**5
      REC32(13)=0.0D+00
      REC32(14)=0.0D+00
      REC32(15)=0.0D+00
C
C     CALCULATE COORDINATES OF UNIT VECTOR IN THE
C     2-3 DIRECTION. THE EXPANSION COEFFICIENTS ARE
C     CONTAINED IN THE ARRAYS U3YR AND U3ZR
C
      CALL PLMLT2 ( REC32 , V3YR , U3YR )
      CALL PLMLT2 ( REC32 , V3ZR , U3ZR )
C
C     IF (REFM1 .EQ. REFM3) THEN
      IF (DABS(REFM1-REFM3).LT.0.000001) THEN
C
C     GENERATE EXPANSION COEFFIENTS FOR 1/SQRT(2*(COS(RHOBAR)+1)
C     (CONTAINED IN CRRC)
C
      CALL RECCOS ( CRRC )
C
C     GENERATE COORDINATES FOR A UNIT VECTOR IN THE 'PARALLEL'
C     DIRECTION
C
      DO 5000 II=1,15
5000  AUXIY(II) = U3YR(II)-U1YR(II)
      CALL PLMLT2 ( CRRC , AUXIY , UPYR )
C
      DO 5100 II=1,15
5100  AUXIZ(II) = U3ZR(II)-U1ZR(II)
      CALL PLMLT2 ( CRRC , AUXIZ , UPZR )
C
      ELSE
C
      DO 5105 II=1,15
      UPYR(II) = U3YR(II)
5105  UPZR(II) = U3ZR(II)
C
      ENDIF
C
C
C
      DO 5500 NUMBER=1,2
        CALL CSHEET(NUMBER)
C
C
C     GENERATE EXPANSION COEFFIENTS FOR THE ELECTRONIC
C     DIPOLE MOMENT FUNCTIONS (PARALLEL AND PERPENDICULAR)
C     TAKEN FROM INPUT.
C
      CALL GENDIP ( DMPARR , DMPERP )
C
C     GENERATE EXPANSION COEFFIENTS FOR THE ELECTRONIC
C     DIPOLE MOMENT ALONG THE Y AXIS.
      CALL PLMLT2 ( DMPARR , UPYR , AUXIY )
      CALL PLMLT2 ( DMPERP , UPZR , AUXIZ )
      DO 5200 II=1,15
5200  DMYR(II) = AUXIY(II)+AUXIZ(II)
C
C     GENERATE EXPANSION COEFFIENTS FOR THE ELECTRONIC
C     DIPOLE MOMENT ALONG THE Z AXIS.
C
      CALL PLMLT2 ( DMPARR , UPZR , AUXIY )
      CALL PLMLT2 ( DMPERP , UPYR , AUXIZ )
      DO 5300 II=1,15
5300  DMZR(II) = AUXIY(II)-AUXIZ(II)
C
C     TRANSFORM TO POLYNOMIALS IN THE Y'S
C
      CALL TRNSRY ( DMYR , DMY )
      CALL TRNSRY ( DMZR , DMZ )
C
C     ADD NUCLEAR PART
C
      DO 5400 II=1,15
        IF (NUMBER.EQ.1) THEN
          DMMMY(II) = DMY(II)+DNYY(II)
          DMMMZ(II) = DMZ(II)+DNZY(II)
        ELSE
          DMPPY(II) = DMY(II)+DNYY(II)
          DMPPZ(II) = DMZ(II)+DNZY(II) 
        ENDIF  
5400  CONTINUE
5500  CONTINUE
C
C     x-Komponente zwischen den beiden Funktionen     
C
      CORO=1.0D+00-COS(RHO)
      CALL TRNSDP(DIPMPX,AUXILI)
C
      SBARS(1)=SR*RE12*RE32
      SBARS(2)=
     .    (SR*(M**2*M2**2*RE32+M*CR**2*M3*M1*M2*RE32+M*CR*
     . M3*M1*M2*RE12+M*CR*M1*M2**2*RE12+2.*M*SR**2*M3*M1*M2
     . *RE32+CR**2*SR**2*M3**2*M1**2*RE32+CR*SR**2*M3**2*M1
     . **2*RE12+CR*SR**2*M3*M1**2*M2*RE12+SR**4*M3**2*M1**2
     . *RE32))/(M**2*M2**2+2.*M*SR**2*M3*M1*M2+SR**4*M3**2*
     . M1**2)
      SBARS(3)=
     .    (SR*(M**2*M2**2*RE12+M*CR**2*M3*M1*M2*RE12+M*CR*
     . M3*M1*M2*RE32+M*CR*M3*M2**2*RE32+2.*M*SR**2*M3*M1*M2
     . *RE12+CR**2*SR**2*M3**2*M1**2*RE12+CR*SR**2*M3**2*M1
     . **2*RE32+CR*SR**2*M3**2*M1*M2*RE32+SR**4*M3**2*M1**2
     . *RE12))/(M**2*M2**2+2.*M*SR**2*M3*M1*M2+SR**4*M3**2*
     . M1**2)
      SBARS(4)=
     .     (M*CR*SR*M1*M2*(M3+M2))/(M**2*M2**2+2.*M*SR**2*
     . M3*M1*M2+SR**4*M3**2*M1**2)
      SBARS(5)=
     .     (M*CR*SR*M3*M2*(M1+M2))/(M**2*M2**2+2.*M*SR**2*
     . M3*M1*M2+SR**4*M3**2*M1**2)
      SBARS(6)=
     .     (SR*(M**2*M2**2+2.*M*CR**2*M3*M1*M2+2.*M*SR**2*
     . M3*M1*M2+CR**2*SR**2*M3**2*M1**2+SR**4*M3**2*M1**2-
     . SR**2*M3**2*M1**2-SR**2*M3**2*M1*M2-SR**2*M3*M1**2*
     . M2-SR**2*M3*M1*M2**2))/(M**2*M2**2+2.*M*SR**2*M3*M1*
     . M2+SR**4*M3**2*M1**2)
C
      CALL TRNSSR ( SBARS , AUXIR )
C
      REC32( 1)=1.0D+00/RE32
      REC32( 2)=0.0D+00
      REC32( 3)=-1.0D+00/RE32**2
      REC32( 4)=0.0D+00
      REC32( 5)=1.0D+00/RE32**3
      REC32( 6)=0.0D+00
      REC32( 7)=0.0D+00
      REC32( 8)=-1.0D+00/RE32**4
      REC32( 9)=0.0D+00
      REC32(10)=0.0D+00
      REC32(11)=0.0D+00
      REC32(12)=1.0D+00/RE32**5
      REC32(13)=0.0D+00
      REC32(14)=0.0D+00
      REC32(15)=0.0D+00
C
      CALL PLMLT2 ( REC32 , AUXIR  , AUXI2  )
C
      REC12( 1)=1.0D+00/RE12
      REC12( 2)=-1.0D+00/RE12**2
      REC12( 3)=0.0D+00
      REC12( 4)=1.0D+00/RE12**3
      REC12( 5)=0.0D+00
      REC12( 6)=0.0D+00
      REC12( 7)=-1.0D+00/RE12**4
      REC12( 8)=0.0D+00
      REC12( 9)=0.0D+00
      REC12(10)=0.0D+00
      REC12(11)=1.0D+00/RE12**5
      REC12(12)=0.0D+00
      REC12(13)=0.0D+00
      REC12(14)=0.0D+00
      REC12(15)=0.0D+00
C
      CALL PLMLT2 ( REC12 , AUXI2  , SBARR  )
C
C
      CALL PLMLT2 ( SBARR , AUXILI , DMMPXR) 
C
      CALL TRNSRY(DMMPXR,DMMPX)     
C
C     IACT=0 (keine Intensitaeten => Felder loeschen)
C
      ELSE
        DO 5600 II=1,15
          DMMMY(II)=0.0D+00
          DMMMZ(II)=0.0D+00
          DMPPY(II)=0.0D+00
          DMPPZ(II)=0.0D+00
          DMMPX(II)=0.0D+00
5600    CONTINUE
      ENDIF
      RETURN
      END
C
C
      SUBROUTINE TRRFEQ ( XR )
      IMPLICIT REAL*8 (A-H,O-Z)
C            :
C DATE       : 05.10.1989
C AUTHOR     : PER JENSEN
C UPDATES    :
C LANGUAGE   : FORTRAN
C PURPOSE    : TRANSFORMATION FROM A SECOND ORDER POLYNOMIAL IN THE
C            : YRI'S TO A FOURTH ORDER POLYNOMIAL IN THE YEI'S
C            : FOUND IN THE RENTEL TREATMENT OF THE RENNER EFFECT.
C            : THE CODE IS GENERATED BY REDUCE.
C            :
C    THE ARRAY CONTAINS THE COEFFICIENTS OF THE FOLLOWING
C    QUANTITIES:
C
C    I             XK(I), K = R OR E
C  -------------------------------------------------------------
C    1             1
C    2             YK1
C    3             YK3
C    4             YK1**2
C    5             YK3**2
C    6             YK1*YK3
C    7             YK1**3
C    8             YK3**3
C    9             YK1**2*YK3
C   10             YK1*YK3**2
C   11             YK1**4
C   12             YK3**4
C   13             YK1**3*YK3
C   14             YK1*YK3**3
C   15             YK1**2*YK3**2
C
      REAL*8 M1,M2,M3,M,U1,U3,U13,V
C
      REAL*8 AMASS(3,10)
C
      REAL*8 RHOE,FA1,FA2,FA3,FA4,FA5,FA6,FA7,FA8,
     1       AA1,AA3,
     2       F1A1,F2A1,F3A1,F4A1,F1A3,F2A3,F3A3,F4A3,
     3       F11,F1A11,F2A11,F3A11,F33,F1A33,F2A33,F3A33,
     4       F13,F1A13,F2A13,F3A13,
     5       F111,F1A111,F2A111,F333,F1A333,F2A333,
     6       F113,F1A113,F2A113,F133,F1A133,F2A133,
     7       F1111,FA1111,F3333,FA3333,F1113,FA1113,
     8       F1333,FA1333,F1133,FA1133,
     8       RE12 , RE32 , RHOREF , VMIN
C
      REAL*8 ETRIAL , RHOMAX , PNM1 , HBASE , HSTEP , EGUESS ,
     1      PREC
C
      REAL*8 THRSH1 , THRSH2 , THRSH3 , THRSH4 , THRSH5 ,
     1      THRSH6 , THRSH7 , THRSH8 , THRSH9 , THRSHX ,
     2      VELLGT , PLANCK , AVOGNO , DEGRAD , RADDEG ,
     3      PI
C
      REAL*8 B11,B13,B111,B133,B113,
     2      B1111,B1333,B1113,B1133,
     3      B11111,B13333,B11113,B11333,B11133,
     4      B31,B33,B311,B333,B313,
     5      B3111,B3333,B3113,B3133,
     6      B31111,B33333,B31113,B31333,B31133
C
      REAL*8 CR1,CR3,CR11,CR33,CR13,
     2      CR111,CR333,CR113,CR133,
     3      CR1111,CR3333,CR1113,CR1333,CR1133
C
      INTEGER NFIL1 , NFIL2 , NFIL3 , NFIL4 , NFIL5 ,
     5       NFIL6 , NFIL7 , NFIL8 , NFIL9 , NFIL10 ,
     6       NFIL11 , NFIL12 , NFIL13 , NFIL14 , NFIL15 ,
     7       NFIL16 , NFIL17 , NFIL18 , NFIL19 , NFIL20 ,
     6       ITEST  , IPRINT , NSTNR , NSTNIN , IREST ,
     7       IISOT , IQUAS , ISYMS , NISOT , NQUAS ,
     8       NUMQUA , NOPTIT , NOPTIM , IOBSER , NOBSER,
     9       ISOMAX , NATTS  , V0TYPE , IVAR(128) , PARMAX ,
     1       NUMPAR , PRTINT
C
      INTEGER V1 ,V2, V3 , V2MXP1, V2P1,
     1       NSTINT , NSERIN , NSERP , NSERQ , KQUA , NTEST ,
     2       NSEPP2 , NSEQP1 , MBASIS ,
     3       MDIM , NFSYM0, NFASY0, NFSYMJ, NFASYJ,
     4       KSTYPA(2) , LSTYPA(2) , JMAX , V2MAX , JMAXP1
C
      INTEGER IQUANT(9,10)
C
      LOGICAL SYMM
C
      REAL*8 RMK(2),AAS(2)
      INTEGER NOBAS,MBASP1,LENIW
      REAL*8 XR(15)
C
      include 'isotop.h'
      include 'value.h'
      include 'molcul.h'
      include 'rentel.h'
      include 'integ.h'
      include 'dimen.h'
      include 'lsfit.h'
      include 'rensys.h'
      include 'bcoeff.h'
      include 'crcoef.h'
      include 'morse.h'
      include 'modim.h'
C
      IF (NSURF .EQ. 1) THEN
           C1=EXP(-AA1*(R12RF1-RE12))
           C3=EXP(-AA3*(R32RF1-RE32))
           A1=1.0E+00-C1
           A3=1.0E+00-C3
      ELSE
           C1=EXP(-AA1*(R12RF2-RE12))
           C3=EXP(-AA3*(R32RF2-RE32))
           A1=1.0E+00-C1
           A3=1.0E+00-C3
      ENDIF
C
      V0    = XR( 1)
      Q1    = XR( 2)
      Q3    = XR( 3)
      Q11   = XR( 4)
      Q33   = XR( 5)
      Q13   = XR( 6)
      Q111  = XR( 7)
      Q333  = XR( 8)
      Q113  = XR( 9)
      Q133  = XR(10)
      Q1111 = XR(11)
      Q3333 = XR(12)
      Q1113 = XR(13)
      Q1333 = XR(14)
      Q1133 = XR(15)
      VE0=A3**4*Q3333+A3**3*A1*Q1333+A3**3*Q333+A3**2*A1**2
     . *Q1133+A3**2*A1*Q133+A3**2*Q33+A3*A1**3*Q1113+A3*A1
     . **2*Q113+A3*A1*Q13+A3*Q3+A1**4*Q1111+A1**3*Q111+A1**
     . 2*Q11+A1*Q1+V0
      Z1=C1*(A3**3*Q1333+2.E0*A3**2*A1*Q1133+A3**2*Q133+3.E0*A3
     . *A1**2*Q1113+2.E0*A3*A1*Q113+A3*Q13+4.E0*A1**3*Q1111+3.E0*
     . A1**2*Q111+2.E0*A1*Q11+Q1)
      Z3=C3*(4.E0*A3**3*Q3333+3.E0*A3**2*A1*Q1333+3.E0*A3**2*Q333
     . +2.E0*A3*A1**2*Q1133+2.E0*A3*A1*Q133+2.E0*A3*Q33+A1**3*
     . Q1113+A1**2*Q113+A1*Q13+Q3)
      Z11=C1**2*(A3**2*Q1133+3.E0*A3*A1*Q1113+A3*Q113+6.E0*A1**
     . 2*Q1111+3.E0*A1*Q111+Q11)
      Z33=C3**2*(6.E0*A3**2*Q3333+3.E0*A3*A1*Q1333+3.E0*A3*Q333+
     . A1**2*Q1133+A1*Q133+Q33)
      Z13=C3*C1*(3.E0*A3**2*Q1333+4.E0*A3*A1*Q1133+2.E0*A3*Q133+
     . 3.E0*A1**2*Q1113+2.E0*A1*Q113+Q13)
      Z111=C1**3*(A3*Q1113+4.E0*A1*Q1111+Q111)
      Z333=C3**3*(4.E0*A3*Q3333+A1*Q1333+Q333)
      Z113=C3*C1**2*(2.E0*A3*Q1133+3.E0*A1*Q1113+Q113)
      Z133=C3**2*C1*(3.E0*A3*Q1333+2.E0*A1*Q1133+Q133)
      Z1111=C1**4*Q1111
      Z3333=C3**4*Q3333
      Z1113=C3*C1**3*Q1113
      Z1333=C3**3*C1*Q1333
      Z1133=C3**2*C1**2*Q1133
C
      XR( 1) = VE0
      XR( 2) = Z1
      XR( 3) = Z3
      XR( 4) = Z11
      XR( 5) = Z33
      XR( 6) = Z13
      XR( 7) = Z111
      XR( 8) = Z333
      XR( 9) = Z113
      XR(10) = Z133
      XR(11) = Z1111
      XR(12) = Z3333
      XR(13) = Z1113
      XR(14) = Z1333
      XR(15) = Z1133
      RETURN
      END
C
C
      SUBROUTINE VPOT ( VCOEF )
      IMPLICIT REAL*8 (A-H,O-Z)
C             :
C DATE        : 30.04.1986
C AUTHOR      : PER JENSEN
C UPDATES     :
C LANGUAGE    : FORTRAN
C PURPOSE     : CALCULATION OF THE EXPANSION COEFFICIENTS (IN THE
C             : Y I'S) OF THE BEND-STRETCH POTENTIAL ENERGY
C             : FUNCTION.
C SUBPROGRAMS :
C      CALLED : TRNSV0,TRNSRY,TRNSPT
C             :
C INPUT       : RHO         INSTANTANEOUS VALUE OF THE BENDING COORDINAT
C             :
C OUTPUT      : VCOEF(1:15) EXPANSION COEFFICIENTS OF THE BEND-STRETCH
C             :             POTENTIAL ENERGY FUNCTION IN TERMS OF THE
C             :             YI PARAMETERS.
C             :
C             :
C    THE ARRAY CONTAINS THE COEFFICIENTS OF THE FOLLOWING
C    QUANTITIES:
C
C    I             VCOEF(I)
C  -------------------------------------------------------------
C    1             1
C    2             Y1
C    3             Y3
C    4             Y1**2
C    5             Y3**2
C    6             Y1*Y3
C    7             Y1**3
C    8             Y3**3
C    9             Y1**2*Y3
C   10             Y1*Y3**2
C   11             Y1**4
C   12             Y3**4
C   13             Y1**3*Y3
C   14             Y1*Y3**3
C   15             Y1**2*Y3**2
C
      REAL*8 M1,M2,M3,M,U1,U3,U13,V
C
      REAL*8 AMASS(3,10)
C
      REAL*8 RHOE,FA1,FA2,FA3,FA4,FA5,FA6,FA7,FA8,
     1       AA1,AA3,
     2       F1A1,F2A1,F3A1,F4A1,F1A3,F2A3,F3A3,F4A3,
     3       F11,F1A11,F2A11,F3A11,F33,F1A33,F2A33,F3A33,
     4       F13,F1A13,F2A13,F3A13,
     5       F111,F1A111,F2A111,F333,F1A333,F2A333,
     6       F113,F1A113,F2A113,F133,F1A133,F2A133,
     7       F1111,FA1111,F3333,FA3333,F1113,FA1113,
     8       F1333,FA1333,F1133,FA1133,
     8       RE12 , RE32 , RHOREF , VMIN
C
      REAL*8 ETRIAL , RHOMAX , PNM1 , HBASE , HSTEP , EGUESS ,
     1      PREC
C
      REAL*8 THRSH1 , THRSH2 , THRSH3 , THRSH4 , THRSH5 ,
     1      THRSH6 , THRSH7 , THRSH8 , THRSH9 , THRSHX ,
     2      VELLGT , PLANCK , AVOGNO , DEGRAD , RADDEG ,
     3      PI
C
      REAL*8 B11,B13,B111,B133,B113,
     2      B1111,B1333,B1113,B1133,
     3      B11111,B13333,B11113,B11333,B11133,
     4      B31,B33,B311,B333,B313,
     5      B3111,B3333,B3113,B3133,
     6      B31111,B33333,B31113,B31333,B31133
C
      REAL*8 CR1,CR3,CR11,CR33,CR13,
     2      CR111,CR333,CR113,CR133,
     3      CR1111,CR3333,CR1113,CR1333,CR1133
C
      INTEGER NFIL1 , NFIL2 , NFIL3 , NFIL4 , NFIL5 ,
     5       NFIL6 , NFIL7 , NFIL8 , NFIL9 , NFIL10 ,
     6       NFIL11 , NFIL12 , NFIL13 , NFIL14 , NFIL15 ,
     7       NFIL16 , NFIL17 , NFIL18 , NFIL19 , NFIL20 ,
     6       ITEST  , IPRINT , NSTNR , NSTNIN , IREST ,
     7       IISOT , IQUAS , ISYMS , NISOT , NQUAS ,
     8       NUMQUA , NOPTIT , NOPTIM , IOBSER , NOBSER,
     9       ISOMAX , NATTS  , V0TYPE , IVAR(128) , PARMAX ,
     1       NUMPAR , PRTINT
C
      INTEGER V1 ,V2, V3 , V2MXP1, V2P1,
     1       NSTINT , NSERIN , NSERP , NSERQ , KQUA , NTEST ,
     2       NSEPP2 , NSEQP1 , MBASIS ,
     3       MDIM , NFSYM0, NFASY0, NFSYMJ, NFASYJ,
     4       KSTYPA(2) , LSTYPA(2) , JMAX , V2MAX , JMAXP1
C
      INTEGER IQUANT(9,10)
C
      LOGICAL SYMM
C
      REAL*8 RMK(2),AAS(2)
      INTEGER NOBAS,MBASP1,LENIW
      REAL*8 VCOEF(15),V0COER(15),V0COEY(15)
C
      include 'isotop.h'
      include 'value.h'
      include 'molcul.h'
      include 'rentel.h'
      include 'integ.h'
      include 'dimen.h'
      include 'lsfit.h'
      include 'rensys.h'
      include 'bcoeff.h'
      include 'crcoef.h'
      include 'morse.h'
      include 'modim.h'
C
      CORO=1.0D+00-COS(RHO)
      CALL TRNSV0 ( V0COER )
      CALL TRNSRY ( V0COER , V0COEY )
      CALL TRNSPT ( VCOEF )
      VCOEF(1)=VCOEF(1)+V0COEY(1)
      VCOEF(2)=VCOEF(2)+V0COEY(2)
      VCOEF(3)=VCOEF(3)+V0COEY(3)
      VCOEF(4)=VCOEF(4)+V0COEY(4)
      VCOEF(5)=VCOEF(5)+V0COEY(5)
      VCOEF(6)=VCOEF(6)+V0COEY(6)
      VCOEF(7)=VCOEF(7)+V0COEY(7)
      VCOEF(8)=VCOEF(8)+V0COEY(8)
      VCOEF(9)=VCOEF(9)+V0COEY(9)
      VCOEF(10)=VCOEF(10)+V0COEY(10)
      VCOEF(11)=VCOEF(11)+V0COEY(11)
      VCOEF(12)=VCOEF(12)+V0COEY(12)
      VCOEF(13)=VCOEF(13)+V0COEY(13)
      VCOEF(14)=VCOEF(14)+V0COEY(14)
      VCOEF(15)=VCOEF(15)+V0COEY(15)
      RETURN
      END
C
C
      SUBROUTINE TRNSV0 ( V0COEF )
      IMPLICIT REAL*8 (A-H,O-Z)
C             :
C DATE        : 24.04.1986
C AUTHOR      : PER JENSEN
C UPDATES     :
C LANGUAGE    : FORTRAN
C PURPOSE     : TRANSFORMATION OF THE PURE BENDING POTENTIAL FROM THE
C             : RHO BAR DEPENDENT FORM TO THE RHO DEPENDENT FORM.
C             : EXPANSION COEFFICIENTS FOR R SUB I'S ARE CALCULATED.
C             : THE CODE IS GENERATED BY REDUCE.
C             :
C SUBPROGRAMS :
C      CALLED :
C             :
C INPUT       : RHO          INSTANTANEOUS VALUE OF THE BENDING COORDINA
C             :
C OUTPUT      : V0COEF(1:15) EXPANSION COEFFICIENTS OF THE BEND-STRETCH
C             :              POTENTIAL ENERGY FUNCTION IN TERMS OF THE
C             :              YI PARAMETERS.
C             :
C             :
C    THE ARRAY CONTAINS THE COEFFICIENTS OF THE FOLLOWING
C    QUANTITIES:
C
C    I             VCOEF(I)
C  -------------------------------------------------------------
C    1             1
C    2             R1
C    3             R3
C    4             R1**2
C    5             R3**2
C    6             R1*R3
C    7             R1**3
C    8             R3**3
C    9             R1**2*R3
C   10             R1*R3**2
C   11             R1**4
C   12             R3**4
C   13             R1**3*R3
C   14             R1*R3**3
C   15             R1**2*R3**2
C
      REAL*8 M1,M2,M3,M,U1,U3,U13,V
C
      REAL*8 AMASS(3,10)
C
      REAL*8 RHOE,FA1,FA2,FA3,FA4,FA5,FA6,FA7,FA8,
     1       AA1,AA3,
     2       F1A1,F2A1,F3A1,F4A1,F1A3,F2A3,F3A3,F4A3,
     3       F11,F1A11,F2A11,F3A11,F33,F1A33,F2A33,F3A33,
     4       F13,F1A13,F2A13,F3A13,
     5       F111,F1A111,F2A111,F333,F1A333,F2A333,
     6       F113,F1A113,F2A113,F133,F1A133,F2A133,
     7       F1111,FA1111,F3333,FA3333,F1113,FA1113,
     8       F1333,FA1333,F1133,FA1133,
     8       RE12 , RE32 , RHOREF , VMIN
C
      REAL*8 ETRIAL , RHOMAX , PNM1 , HBASE , HSTEP , EGUESS ,
     1      PREC
C
      REAL*8 THRSH1 , THRSH2 , THRSH3 , THRSH4 , THRSH5 ,
     1      THRSH6 , THRSH7 , THRSH8 , THRSH9 , THRSHX ,
     2      VELLGT , PLANCK , AVOGNO , DEGRAD , RADDEG ,
     3      PI
C
      REAL*8 B11,B13,B111,B133,B113,
     2      B1111,B1333,B1113,B1133,
     3      B11111,B13333,B11113,B11333,B11133,
     4      B31,B33,B311,B333,B313,
     5      B3111,B3333,B3113,B3133,
     6      B31111,B33333,B31113,B31333,B31133
C
      REAL*8 CR1,CR3,CR11,CR33,CR13,
     2      CR111,CR333,CR113,CR133,
     3      CR1111,CR3333,CR1113,CR1333,CR1133
C
      INTEGER NFIL1 , NFIL2 , NFIL3 , NFIL4 , NFIL5 ,
     5       NFIL6 , NFIL7 , NFIL8 , NFIL9 , NFIL10 ,
     6       NFIL11 , NFIL12 , NFIL13 , NFIL14 , NFIL15 ,
     7       NFIL16 , NFIL17 , NFIL18 , NFIL19 , NFIL20 ,
     6       ITEST  , IPRINT , NSTNR , NSTNIN , IREST ,
     7       IISOT , IQUAS , ISYMS , NISOT , NQUAS ,
     8       NUMQUA , NOPTIT , NOPTIM , IOBSER , NOBSER,
     9       ISOMAX , NATTS  , V0TYPE , IVAR(128) , PARMAX ,
     1       NUMPAR , PRTINT
C
      INTEGER V1 ,V2, V3 , V2MXP1, V2P1,
     1       NSTINT , NSERIN , NSERP , NSERQ , KQUA , NTEST ,
     2       NSEPP2 , NSEQP1 , MBASIS ,
     3       MDIM , NFSYM0, NFASY0, NFSYMJ, NFASYJ,
     4       KSTYPA(2) , LSTYPA(2) , JMAX , V2MAX , JMAXP1
C
      INTEGER IQUANT(9,10)
C
      LOGICAL SYMM
C
      REAL*8 RMK(2),AAS(2)
      INTEGER NOBAS,MBASP1,LENIW
      REAL*8  CORO2,CORO3,CORO4,CORO5,CORO6,CORO7,
     4       Q1,Q3,Q11,Q33,Q13,
     5       Q111,Q333,Q113,Q133,
     6       Q1111,Q3333,Q1113,Q1333,Q1133,
     7       V0COEF(15),ANS1
C
      include 'isotop.h'
      include 'value.h'
      include 'molcul.h'
      include 'rentel.h'
      include 'integ.h'
      include 'dimen.h'
      include 'lsfit.h'
      include 'rensys.h'
      include 'bcoeff.h'
      include 'crcoef.h'
      include 'morse.h'
      include 'modim.h'
C
C       CALCULATE THE V0 VALUE
C
      V0VAL =  (((((((FA8*CORO+FA7)*CORO+FA6)*CORO+FA5)*CORO
     1        +FA4)*CORO+FA3)*CORO+FA2)*CORO+FA1)*CORO
      CORO2=CORO*CORO
      CORO3=CORO2*CORO
      CORO4=CORO3*CORO
      CORO5=CORO4*CORO
      CORO6=CORO5*CORO
      CORO7=CORO6*CORO
      Q1=CORO*(8.E0*CORO6*FA8+7.E0*CORO5*FA7+6.E0*CORO4*FA6+5.E0*
     1 CORO3*FA5+4.E0*CORO2*FA4+3.E0*CORO*FA3+2.E0*FA2)*CR1
     2 +FA1*CR1
      Q3=CORO*(8.E0*CORO6*FA8+7.E0*CORO5*FA7+6.E0*CORO4*FA6+5.E0*
     1 CORO3*FA5+4.E0*CORO2*FA4+3.E0*CORO*FA3+2.E0*FA2)*CR3
     2 +FA1*CR3
      Q11=8.E0*CR11*CORO7*FA8+7.E0*CR11*CORO6*FA7+6.E0*CR11*CORO**
     1 5*FA6+5.E0*CR11*CORO4*FA5+4.E0*CR11*CORO3*FA4+3.E0*CR11*
     1 CORO2*FA3+2.E0*CR11*CORO*FA2+28.E0*CR1**2*CORO6*FA8+21.E0*
     1 CR1**2*CORO5*FA7+15.E0*CR1**2*CORO4*FA6+10.E0*CR1**2*CORO
     1 **3*FA5+6.E0*CR1**2*CORO2*FA4+3.E0*CR1**2*CORO*FA3+CR1**2*
     1 FA2+FA1*CR11
      Q33=8.E0*CR33*CORO7*FA8+7.E0*CR33*CORO6*FA7+6.E0*CR33*CORO**
     1 5*FA6+5.E0*CR33*CORO4*FA5+4.E0*CR33*CORO3*FA4+3.E0*CR33*
     1 CORO2*FA3+2.E0*CR33*CORO*FA2+28.E0*CR3**2*CORO6*FA8+21.E0*
     1 CR3**2*CORO5*FA7+15.E0*CR3**2*CORO4*FA6+10.E0*CR3**2*CORO
     1 **3*FA5+6.E0*CR3**2*CORO2*FA4+3.E0*CR3**2*CORO*FA3+CR3**2*
     1 FA2+FA1*CR33
      Q13=8.E0*CR13*CORO7*FA8+7.E0*CR13*CORO6*FA7+6.E0*CR13*CORO**
     1 5*FA6+5.E0*CR13*CORO4*FA5+4.E0*CR13*CORO3*FA4+3.E0*CR13*
     1 CORO2*FA3+2.E0*CR13*CORO*FA2+56.E0*CR3*CR1*CORO6*FA8+42.E0*
     1 CR3*CR1*CORO5*FA7+30.E0*CR3*CR1*CORO4*FA6+20.E0*CR3*CR1*
     1 CORO3*FA5+12.E0*CR3*CR1*CORO2*FA4+6.E0*CR3*CR1*CORO*FA3+
     1 2.E0*CR3*CR1*FA2+FA1*CR13
      Q111=8.E0*CR111*CORO7*FA8+7.E0*CR111*CORO6*FA7+6.E0*CR111*
     1 CORO5*FA6+5.E0*CR111*CORO4*FA5+4.E0*CR111*CORO3*FA4+3.E0*
     1 CR111*CORO2*FA3+2.E0*CR111*CORO*FA2+56.E0*CR11*CR1*CORO6*
     1 FA8+42.E0*CR11*CR1*CORO5*FA7+30.E0*CR11*CR1*CORO4*FA6+20.E0
     1 *CR11*CR1*CORO3*FA5+12.E0*CR11*CR1*CORO2*FA4+6.E0*CR11*
     1 CR1*CORO*FA3+2.E0*CR11*CR1*FA2+56.E0*CR1**3*CORO5*FA8+35.E0*
     1 CR1**3*CORO4*FA7+20.E0*CR1**3*CORO3*FA6+10.E0*CR1**3*CORO
     1 **2*FA5+4.E0*CR1**3*CORO*FA4+CR1**3*FA3+FA1*CR111
      Q333=8.E0*CR333*CORO7*FA8+7.E0*CR333*CORO6*FA7+6.E0*CR333*
     1 CORO5*FA6+5.E0*CR333*CORO4*FA5+4.E0*CR333*CORO3*FA4+3.E0*
     1 CR333*CORO2*FA3+2.E0*CR333*CORO*FA2+56.E0*CR33*CR3*CORO6*
     1 FA8+42.E0*CR33*CR3*CORO5*FA7+30.E0*CR33*CR3*CORO4*FA6+20.E0
     1 *CR33*CR3*CORO3*FA5+12.E0*CR33*CR3*CORO2*FA4+6.E0*CR33*
     1 CR3*CORO*FA3+2.E0*CR33*CR3*FA2+56.E0*CR3**3*CORO5*FA8+35.E0*
     1 CR3**3*CORO4*FA7+20.E0*CR3**3*CORO3*FA6+10.E0*CR3**3*CORO
     1 **2*FA5+4.E0*CR3**3*CORO*FA4+CR3**3*FA3+FA1*CR333
      Q113=8.E0*CR113*CORO7*FA8+7.E0*CR113*CORO6*FA7+6.E0*CR113*
     1 CORO5*FA6+5.E0*CR113*CORO4*FA5+4.E0*CR113*CORO3*FA4+3.E0*
     1 CR113*CORO2*FA3+2.E0*CR113*CORO*FA2+56.E0*CR13*CR1*CORO6*
     1 FA8+42.E0*CR13*CR1*CORO5*FA7+30.E0*CR13*CR1*CORO4*FA6+20.E0
     1 *CR13*CR1*CORO3*FA5+12.E0*CR13*CR1*CORO2*FA4+6.E0*CR13*
     1 CR1*CORO*FA3+2.E0*CR13*CR1*FA2+56.E0*CR11*CR3*CORO6*FA8+42.E0
     1 *CR11*CR3*CORO5*FA7+30.E0*CR11*CR3*CORO4*FA6+20.E0*CR11*
     1 CR3*CORO3*FA5+12.E0*CR11*CR3*CORO2*FA4+6.E0*CR11*CR3*CORO
     1 *FA3+2.E0*CR11*CR3*FA2+168.E0*CR3*CR1**2*CORO5*FA8+105.E0*CR3
     1 *CR1**2*CORO4*FA7+60.E0*CR3*CR1**2*CORO3*FA6+30.E0*CR3*
     1 CR1**2*CORO2*FA5+12.E0*CR3*CR1**2*CORO*FA4+3.E0*CR3*CR1**2*
     1 FA3+FA1*CR113
      Q133=8.E0*CR133*CORO7*FA8+7.E0*CR133*CORO6*FA7+6.E0*CR133*
     1 CORO5*FA6+5.E0*CR133*CORO4*FA5+4.E0*CR133*CORO3*FA4+3.E0*
     1 CR133*CORO2*FA3+2.E0*CR133*CORO*FA2+56.E0*CR13*CR3*CORO6*
     1 FA8+42.E0*CR13*CR3*CORO5*FA7+30.E0*CR13*CR3*CORO4*FA6+20.E0
     1 *CR13*CR3*CORO3*FA5+12.E0*CR13*CR3*CORO2*FA4+6.E0*CR13*
     1 CR3*CORO*FA3+2.E0*CR13*CR3*FA2+56.E0*CR33*CR1*CORO6*FA8+42.E0
     1 *CR33*CR1*CORO5*FA7+30.E0*CR33*CR1*CORO4*FA6+20.E0*CR33*
     1 CR1*CORO3*FA5+12.E0*CR33*CR1*CORO2*FA4+6.E0*CR33*CR1*CORO
     1 *FA3+2.E0*CR33*CR1*FA2+168.E0*CR3**2*CR1*CORO5*FA8+105.E0*CR3
     1 **2*CR1*CORO4*FA7+60.E0*CR3**2*CR1*CORO3*FA6+30.E0*CR3**2
     1 *CR1*CORO2*FA5+12.E0*CR3**2*CR1*CORO*FA4+3.E0*CR3**2*CR1*
     1 FA3+FA1*CR133
      Q1111=8.E0*CR1111*CORO7*FA8+7.E0*CR1111*CORO6*FA7+6.E0*
     1 CR1111*CORO5*FA6+5.E0*CR1111*CORO4*FA5+4.E0*CR1111*CORO**
     1 3*FA4+3.E0*CR1111*CORO2*FA3+2.E0*CR1111*CORO*FA2+56.E0*CR111*
     1 CR1*CORO6*FA8+42.E0*CR111*CR1*CORO5*FA7+30.E0*CR111*CR1*
     1 CORO4*FA6+20.E0*CR111*CR1*CORO3*FA5+12.E0*CR111*CR1*CORO
     1 **2*FA4+6.E0*CR111*CR1*CORO*FA3+2.E0*CR111*CR1*FA2+28.E0*CR11**
     1 2*CORO6*FA8+21.E0*CR11**2*CORO5*FA7+15.E0*CR11**2*CORO4
     1 *FA6+10.E0*CR11**2*CORO3*FA5+6.E0*CR11**2*CORO2*FA4+3.E0*
     1 CR11**2*CORO*FA3+CR11**2*FA2+168.E0*CR11*CR1**2*CORO5*FA8
     1 +105.E0*CR11*CR1**2*CORO4*FA7+60.E0*CR11*CR1**2*CORO3*FA6
     1 +30.E0*CR11*CR1**2*CORO2*FA5+12.E0*CR11*CR1**2*CORO*FA4+3.E0*
     1 CR11*CR1**2*FA3+70.E0*CR1**4*CORO4*FA8+35.E0*CR1**4*CORO3
     1 *FA7+15.E0*CR1**4*CORO2*FA6+5.E0*CR1**4*CORO*FA5+CR1**4*FA4
     1 +FA1*CR1111
      Q3333=8.E0*CR3333*CORO7*FA8+7.E0*CR3333*CORO6*FA7+6.E0*
     1 CR3333*CORO5*FA6+5.E0*CR3333*CORO4*FA5+4.E0*CR3333*CORO**
     1 3*FA4+3.E0*CR3333*CORO2*FA3+2.E0*CR3333*CORO*FA2+56.E0*CR333*
     1 CR3*CORO6*FA8+42.E0*CR333*CR3*CORO5*FA7+30.E0*CR333*CR3*
     1 CORO4*FA6+20.E0*CR333*CR3*CORO3*FA5+12.E0*CR333*CR3*CORO
     1 **2*FA4+6.E0*CR333*CR3*CORO*FA3+2.E0*CR333*CR3*FA2+28.E0*CR33**
     1 2*CORO6*FA8+21.E0*CR33**2*CORO5*FA7+15.E0*CR33**2*CORO4
     1 *FA6+10.E0*CR33**2*CORO3*FA5+6.E0*CR33**2*CORO2*FA4+3.E0*
     1 CR33**2*CORO*FA3+CR33**2*FA2+168.E0*CR33*CR3**2*CORO5*FA8
     1 +105.E0*CR33*CR3**2*CORO4*FA7+60.E0*CR33*CR3**2*CORO3*FA6
     1 +30.E0*CR33*CR3**2*CORO2*FA5+12.E0*CR33*CR3**2*CORO*FA4+3.E0*
     1 CR33*CR3**2*FA3+70.E0*CR3**4*CORO4*FA8+35.E0*CR3**4*CORO3
     1 *FA7+15.E0*CR3**4*CORO2*FA6+5.E0*CR3**4*CORO*FA5+CR3**4*FA4
     1 +FA1*CR3333
      ANS1=280.E0*CR3*CR1**3*CORO4*FA8+140.E0*CR3*CR1**3*CORO3*
     1 FA7+60.E0*CR3*CR1**3*CORO2*FA6+20.E0*CR3*CR1**3*CORO*FA5+4.E0
     1 *CR3*CR1**3*FA4
      Q1113=8.E0*CR1113*CORO7*FA8+7.E0*CR1113*CORO6*FA7+6.E0*
     1 CR1113*CORO5*FA6+5.E0*CR1113*CORO4*FA5+4.E0*CR1113*CORO**
     1 3*FA4+3.E0*CR1113*CORO2*FA3+2.E0*CR1113*CORO*FA2+56.E0*CR113*
     1 CR1*CORO6*FA8+42.E0*CR113*CR1*CORO5*FA7+30.E0*CR113*CR1*
     1 CORO4*FA6+20.E0*CR113*CR1*CORO3*FA5+12.E0*CR113*CR1*CORO
     1 **2*FA4+6.E0*CR113*CR1*CORO*FA3+2.E0*CR113*CR1*FA2+56.E0*CR111*
     1 CR3*CORO6*FA8+42.E0*CR111*CR3*CORO5*FA7+30.E0*CR111*CR3*
     1 CORO4*FA6+20.E0*CR111*CR3*CORO3*FA5+12.E0*CR111*CR3*CORO
     1 **2*FA4+6.E0*CR111*CR3*CORO*FA3+2.E0*CR111*CR3*FA2+56.E0*CR13*
     1 CR11*CORO6*FA8+42.E0*CR13*CR11*CORO5*FA7+30.E0*CR13*CR11*
     1 CORO4*FA6+20.E0*CR13*CR11*CORO3*FA5+12.E0*CR13*CR11*CORO
     1 **2*FA4+6.E0*CR13*CR11*CORO*FA3+2.E0*CR13*CR11*FA2+168.E0*CR13*
     1 CR1**2*CORO5*FA8+105.E0*CR13*CR1**2*CORO4*FA7+60.E0*CR13*
     1 CR1**2*CORO3*FA6+30.E0*CR13*CR1**2*CORO2*FA5+12.E0*CR13*
     1 CR1**2*CORO*FA4+3.E0*CR13*CR1**2*FA3+336.E0*CR11*CR3*CR1*CORO
     1 **5*FA8+210.E0*CR11*CR3*CR1*CORO4*FA7+120.E0*CR11*CR3*CR1*
     1 CORO3*FA6+60.E0*CR11*CR3*CR1*CORO2*FA5+24.E0*CR11*CR3*CR1
     1 *CORO*FA4+6.E0*CR11*CR3*CR1*FA3+ANS1+FA1*CR1113
      ANS1=280.E0*CR3**3*CR1*CORO4*FA8+140.E0*CR3**3*CR1*CORO3*
     1 FA7+60.E0*CR3**3*CR1*CORO2*FA6+20.E0*CR3**3*CR1*CORO*FA5+4.E0
     1 *CR3**3*CR1*FA4
      Q1333=8.E0*CR1333*CORO7*FA8+7.E0*CR1333*CORO6*FA7+6.E0*
     1 CR1333*CORO5*FA6+5.E0*CR1333*CORO4*FA5+4.E0*CR1333*CORO**
     1 3*FA4+3.E0*CR1333*CORO2*FA3+2.E0*CR1333*CORO*FA2+56.E0*CR133*
     1 CR3*CORO6*FA8+42.E0*CR133*CR3*CORO5*FA7+30.E0*CR133*CR3*
     1 CORO4*FA6+20.E0*CR133*CR3*CORO3*FA5+12.E0*CR133*CR3*CORO
     1 **2*FA4+6.E0*CR133*CR3*CORO*FA3+2.E0*CR133*CR3*FA2+56.E0*CR333*
     1 CR1*CORO6*FA8+42.E0*CR333*CR1*CORO5*FA7+30.E0*CR333*CR1*
     1 CORO4*FA6+20.E0*CR333*CR1*CORO3*FA5+12.E0*CR333*CR1*CORO
     1 **2*FA4+6.E0*CR333*CR1*CORO*FA3+2.E0*CR333*CR1*FA2+56.E0*CR13*
     1 CR33*CORO6*FA8+42.E0*CR13*CR33*CORO5*FA7+30.E0*CR13*CR33*
     1 CORO4*FA6+20.E0*CR13*CR33*CORO3*FA5+12.E0*CR13*CR33*CORO
     1 **2*FA4+6.E0*CR13*CR33*CORO*FA3+2.E0*CR13*CR33*FA2+168.E0*CR13*
     1 CR3**2*CORO5*FA8+105.E0*CR13*CR3**2*CORO4*FA7+60.E0*CR13*
     1 CR3**2*CORO3*FA6+30.E0*CR13*CR3**2*CORO2*FA5+12.E0*CR13*
     1 CR3**2*CORO*FA4+3.E0*CR13*CR3**2*FA3+336.E0*CR33*CR3*CR1*CORO
     1 **5*FA8+210.E0*CR33*CR3*CR1*CORO4*FA7+120.E0*CR33*CR3*CR1*
     1 CORO3*FA6+60.E0*CR33*CR3*CR1*CORO2*FA5+24.E0*CR33*CR3*CR1
     1 *CORO*FA4+6.E0*CR33*CR3*CR1*FA3+ANS1+FA1*CR1333
      ANS1=168.E0*CR33*CR1**2*CORO5*FA8+105.E0*CR33*CR1**2*CORO4
     1 *FA7+60.E0*CR33*CR1**2*CORO3*FA6+30.E0*CR33*CR1**2*CORO2*
     1 FA5+12.E0*CR33*CR1**2*CORO*FA4+3.E0*CR33*CR1**2*FA3+168.E0*CR11
     1 *CR3**2*CORO5*FA8+105.E0*CR11*CR3**2*CORO4*FA7+60.E0*CR11
     1 *CR3**2*CORO3*FA6+30.E0*CR11*CR3**2*CORO2*FA5+12.E0*CR11*
     1 CR3**2*CORO*FA4+3.E0*CR11*CR3**2*FA3+420.E0*CR3**2*CR1**2*
     1 CORO4*FA8+210.E0*CR3**2*CR1**2*CORO3*FA7+90.E0*CR3**2*CR1
     1 **2*CORO2*FA6+30.E0*CR3**2*CR1**2*CORO*FA5+6.E0*CR3**2*CR1
     1 **2*FA4
      Q1133=8.E0*CR1133*CORO7*FA8+7.E0*CR1133*CORO6*FA7+6.E0*
     1 CR1133*CORO5*FA6+5.E0*CR1133*CORO4*FA5+4.E0*CR1133*CORO**
     1 3*FA4+3.E0*CR1133*CORO2*FA3+2.E0*CR1133*CORO*FA2+56.E0*CR133*
     1 CR1*CORO6*FA8+42.E0*CR133*CR1*CORO5*FA7+30.E0*CR133*CR1*
     1 CORO4*FA6+20.E0*CR133*CR1*CORO3*FA5+12.E0*CR133*CR1*CORO
     1 **2*FA4+6.E0*CR133*CR1*CORO*FA3+2.E0*CR133*CR1*FA2+56.E0*CR113*
     1 CR3*CORO6*FA8+42.E0*CR113*CR3*CORO5*FA7+30.E0*CR113*CR3*
     1 CORO4*FA6+20.E0*CR113*CR3*CORO3*FA5+12.E0*CR113*CR3*CORO2
     1 *FA4+6.E0*CR113*CR3*CORO*FA3+2.E0*CR113*CR3*FA2+28.E0*CR13**
     1 2*CORO6*FA8+21.E0*CR13**2*CORO5*FA7+15.E0*CR13**2*CORO4
     1 *FA6+10.E0*CR13**2*CORO3*FA5+6.E0*CR13**2*CORO2*FA4+3.E0*
     1 CR13**2*CORO*FA3+CR13**2*FA2+336.E0*CR13*CR3*CR1*CORO5*
     1 FA8+210.E0*CR13*CR3*CR1*CORO4*FA7+120.E0*CR13*CR3*CR1*CORO3
     1 *FA6+60.E0*CR13*CR3*CR1*CORO2*FA5+24.E0*CR13*CR3*CR1*
     1 CORO*FA4+6.E0*CR13*CR3*CR1*FA3+56.E0*CR33*CR11*CORO6*FA8+
     1 42.E0*CR33*CR11*CORO5*FA7+30.E0*CR33*CR11*CORO4*FA6+20.E0*
     1 CR33*CR11*CORO3*FA5+12.E0*CR33*CR11*CORO2*FA4+6.E0*CR33*
     1 CR11*CORO*FA3+2.E0*CR33*CR11*FA2+ANS1+FA1*CR1133
      V0COEF(1)=V0VAL
      V0COEF(2)=Q1
      V0COEF(3)=Q3
      V0COEF(4)=Q11
      V0COEF(5)=Q33
      V0COEF(6)=Q13
      V0COEF(7)=Q111
      V0COEF(8)=Q333
      V0COEF(9)=Q113
      V0COEF(10)=Q133
      V0COEF(11)=Q1111
      V0COEF(12)=Q3333
      V0COEF(13)=Q1113
      V0COEF(14)=Q1333
      V0COEF(15)=Q1133
      RETURN
      END
C
C
      SUBROUTINE NUMFCT ( V0 , F1 , F2 , IRR , GRHO )
      IMPLICIT REAL*8 (A-H,O-Z)
C             :
C DATE        : 26.05.1986
C AUTHOR      : PER JENSEN (WITH HELP FROM R. BEARDSWORTH)
C UPDATES     :
C LANGUAGE    : FORTRAN
C             :
C
C     SUBROUTINE CALCULATES THE VALUES OF GRHO(RHO) ,F1(RHO) , F2(RHO) ,
C     AND 2 I0PP(RHO) / HBAR**2
C
C                        (-               (-             -) -)
C               (  0)1/4 (      (  0)-1/2 (      (  0)1/4 )  )
C     GRHO(P) = (MU )    ( J  , (MU )     ( J  , (MU )    )  )
C                        (  P             (  P            )  )
C                        (-               (-             -) -)
C
C             (  0)1/4 ( 0 )1/2    2  ( (  0)-1/4 ( 0 )-1/2 )
C     F (P) = (MU )    (I  )      D   ( (MU )     (I  )     )
C      1                 PP       --  (             PP      )
C                                    2
C                                 DP
C
C
C              0    0
C     F (P) = I   MU
C      2       PP   ZZ
C
C
C             0        _2      16
C     I0 = 2 I   H C / H  N  10
C             PP           A
C
C
      REAL*8 M1,M2,M3,M,U1,U3,U13,V
C
      REAL*8 AMASS(3,10)
C
      REAL*8 RHOE,FA1,FA2,FA3,FA4,FA5,FA6,FA7,FA8,
     1       AA1,AA3,
     2       F1A1,F2A1,F3A1,F4A1,F1A3,F2A3,F3A3,F4A3,
     3       F11,F1A11,F2A11,F3A11,F33,F1A33,F2A33,F3A33,
     4       F13,F1A13,F2A13,F3A13,
     5       F111,F1A111,F2A111,F333,F1A333,F2A333,
     6       F113,F1A113,F2A113,F133,F1A133,F2A133,
     7       F1111,FA1111,F3333,FA3333,F1113,FA1113,
     8       F1333,FA1333,F1133,FA1133,
     8       RE12 , RE32 , RHOREF , VMIN
C
      REAL*8 ETRIAL , RHOMAX , PNM1 , HBASE , HSTEP , EGUESS ,
     1      PREC
C
      REAL*8 THRSH1 , THRSH2 , THRSH3 , THRSH4 , THRSH5 ,
     1      THRSH6 , THRSH7 , THRSH8 , THRSH9 , THRSHX ,
     2      VELLGT , PLANCK , AVOGNO , DEGRAD , RADDEG ,
     3      PI
C
      REAL*8 B11,B13,B111,B133,B113,
     2      B1111,B1333,B1113,B1133,
     3      B11111,B13333,B11113,B11333,B11133,
     4      B31,B33,B311,B333,B313,
     5      B3111,B3333,B3113,B3133,
     6      B31111,B33333,B31113,B31333,B31133
C
      REAL*8 CR1,CR3,CR11,CR33,CR13,
     2      CR111,CR333,CR113,CR133,
     3      CR1111,CR3333,CR1113,CR1333,CR1133
C
      INTEGER NFIL1 , NFIL2 , NFIL3 , NFIL4 , NFIL5 ,
     5       NFIL6 , NFIL7 , NFIL8 , NFIL9 , NFIL10 ,
     6       NFIL11 , NFIL12 , NFIL13 , NFIL14 , NFIL15 ,
     7       NFIL16 , NFIL17 , NFIL18 , NFIL19 , NFIL20 ,
     6       ITEST  , IPRINT , NSTNR , NSTNIN , IREST ,
     7       IISOT , IQUAS , ISYMS , NISOT , NQUAS ,
     8       NUMQUA , NOPTIT , NOPTIM , IOBSER , NOBSER,
     9       ISOMAX , NATTS  , V0TYPE , IVAR(128) , PARMAX ,
     1       NUMPAR , PRTINT
C
      INTEGER V1 ,V2, V3 , V2MXP1, V2P1,
     1       NSTINT , NSERIN , NSERP , NSERQ , KQUA , NTEST ,
     2       NSEPP2 , NSEQP1 , MBASIS ,
     3       MDIM , NFSYM0, NFASY0, NFSYMJ, NFASYJ,
     4       KSTYPA(2) , LSTYPA(2) , JMAX , V2MAX , JMAXP1
C
      INTEGER IQUANT(9,10)
C
      LOGICAL SYMM
C
      REAL*8 RMK(2),AAS(2)
      INTEGER NOBAS,MBASP1,LENIW
      REAL*8 I0,I0P,I0PP,IRRVAL,IRRP,IRRPP
      REAL*8 CE,SE,C2R,S2R,CRME,SRME,ECOEF1,ECOEF2,
     1      F1VAL,F2VAL,GVAL,V0VAL,F2COEF,CRHOE ,
     2      HELP1 , HELP3
      REAL*8 F1(NSTINT),F2(NSTINT),V0(NSTINT),IRR(NSTINT),
     1      GRHO(NSTINT)
      INTEGER I
C
      include 'isotop.h'
      include 'value.h'
      COMMON /MOLCUL/ RHOE,FA1,FA2,FA3,FA4,FA5,FA6,FA7,FA8,
     1               AA1,AA3,
     1               F11,F33,F13,F111,F333,F113,F133,
     1               F1111,F3333,F1113,F1333,F1133,
     2               O1,F1A1,F2A1,F3A1,F4A1,F3,F1A3,F2A3,F3A3,F4A3,
     3               F1A11,F2A11,F3A11,F1A33,F2A33,F3A33,
     4               F1A13,F2A13,F3A13,
     5               F1A111,F2A111,F1A333,F2A333,
     6               F1A113,F2A113,F1A133,F2A133,
     7               FA1111,FA3333,FA1113,
     8               FA1333,FA1133, R12RF1, R32RF1, R12RF2, R32RF2,
     8               RE12 , RE32 , M1 , M2 , M3 , M ,
     9               U1 , U3 , U13 , V ,
     1               SYMM
      include 'rentel.h'
      include 'integ.h'
      include 'dimen.h'
      include 'lsfit.h'
      include 'rensys.h'
      include 'bcoeff.h'
      include 'crcoef.h'
      include 'morse.h'
      include 'modim.h'
C
      IF (IPRINT .NE. 0) WRITE (NFIL6,9000)
      IF (PRTINT .LT. NSTINT .AND. IPRINT .NE. 0)
     1                        WRITE (NFIL6,9001)
      ECOEF1=(U1-U3)/SQRT((U1+U3)**2-4.0E0*U13**2)
      ECOEF2=SQRT((U1+U3-2.0E0*U13)/(U1+U3+2.0E0*U13))
      F2COEF=1.0E0/(U1*U3-U13**2)
      VMIN=1.0E+20
      KMIN=1
      DO 1000 I=1,NSTINT
      RHO=DFLOAT(I)*HSTEP
      EPS=0.5D0*RHO+ECOEF1*ATAN(ECOEF2*TAN(0.5D0*RHO))
      CR=COS(RHO)
      SR=SIN(RHO)
      CE=COS(EPS)
      SE=SIN(EPS)
      C2R=CR*CR-SR*SR
      S2R=2.0E0*CR*SR
      CRME=CR*CE+SR*SE
C
C       CALCULATE DERIVATIVES OF EPSILON, I SUB RHO RHO AND THE
C       DETERMINANT OF THE I SUB 0 TENSOR, I0. EXPRESSIONS FOR
C       EPSILON PRIME AND I SUB RHO RHO ARE TAKEN FROM THE JENSEN
C       COMP. PHYS. REP. PAPER, THE EXPRESSION FOR I0 IS TAKEN
C       FROM HISTORICAL NRB NOTES BY P.R. BUNKER.
C
      I0=(U1*U3-U13*U13*CR*CR)*SR*SR
      I0P=(U1*U3-U13*U13*C2R)*S2R
      I0PP=2.0E0*U13*U13*S2R*S2R+2.0E0*(U1*U3-U13*U13*C2R)*C2R
      IRRVAL=(U1*U3-U13*U13*CR*CR)/(U1+U3+2.0E+00*U13*CR)
      HELP1=U1+U13*CR
      HELP3=U3+U13*CR
      IRRP=2.0E+00*U13*SR*HELP1*HELP3/(HELP1+HELP3)**2
      IRRPP=2.0E0*U13*(HELP1*HELP3*CR*(HELP1+HELP3)
     1    -U13*SR*SR*(HELP1-HELP3)**2)/(HELP1+HELP3)**3
C
C       CALCULATE F1
C
      F1VAL= - IRRP*I0P/(4.0E0*I0*IRRVAL) - 3.0E0*I0P*I0P/(1.6E1*I0*I0)
     1      + I0PP/(4.0E+00*I0) +3.0E0*IRRP*IRRP/(4.0E0*IRRVAL*IRRVAL)
     2      - IRRPP/(2.0E0*IRRVAL)
C
C       CALCULATE F2
C
      F2VAL= (U1*CRME*CRME+U3*CE*CE+2.0E0*U13*CE*CRME)*IRRVAL
     1      *F2COEF/(SR*SR)
C
C       CALCULATE THE G FUNCTION
C
      GVAL =  I0PP/(4.0E0*I0) - 3.0E0*I0P*I0P/(1.6E1*I0*I0)
C
      F1(I)=F1VAL
      F2(I)=F2VAL
      IRR(I)=IRRVAL/M
      GRHO(I)=GVAL
1000  CONTINUE
      IF (IPRINT .EQ. 0) RETURN
      RHO=0.0E+00
      DO 2000 I=1,NSTINT
      RHO=RHO+HSTEP
      IF (MOD(I,PRTINT) .EQ. 0)
     1  WRITE (NFIL6,9002) I , RHO , F1(I) , F2(I), IRR(I) 
2000  CONTINUE
      RETURN
c9100  WRITE (NFIL6,9110)
c9110  FORMAT(' RENTEL.POT.ERR   MINIMUM IN BENDING POTENTIAL ',
c     1       'CANNOT BE DETERMINED')
c      STOP
9000  FORMAT(1H0,' RENTEL.POT.INF   CALCULATION OF F1 , F2 , I0PP ',
     1           'AND V0 FOR WAVE FUNCTION DIFFERENTIAL EQUATION',//)
9001  FORMAT(1H ,15X,'STEP    RHO',6X,'F  (RHO)',8X,'F  (RHO)',10X,'I0',
     1           /,1H ,33X,'1',15X,'2',18X,'PP',/)
9002  FORMAT(1H ,15X,I4,2X,F7.4,3F16.8)
C
      END
C
C
      SUBROUTINE TRNSPT ( VCOEF )
      IMPLICIT REAL*8 (A-H,O-Z)
C             :
C DATE        : 07.10.1992
C AUTHOR      : PER JENSEN
C UPDATES     :
C LANGUAGE    : FORTRAN
C PURPOSE     : TRANSFORMATION OF THE BEND-STRETCH POTENTIAL FROM RHO
C             : BAR DEPENDENT FORM TO RHO DEPENDENT FORM FOR THE
C             : RENNER-TELLER CASE.
C             : EXPANSION COEFFICIENTS OF Y SUB I'S ARE CALCULATED.
C             : THE CODE IS GENERATED BY REDUCE.
C             : ROUTINE IS OBTAINED BY INTRODUCING TERMS LINEAR
C             : IN THE YI IN THE CORRESPONDING MORBID ROUTINE.
C SUBPROGRAMS :
C      CALLED :
C             :
C INPUT       : RHO  INSTANTANEOUS VALUE OF THE BENDING COORDINATE
C             :
C OUTPUT      : VCOEF(1:15)  EXPANSION COEFFICIENTS OF THE BEND-STRETCH
C             :              POTENTIAL ENERGY FUNCTION IN TERMS OF THE
C             :              YI PARAMETERS.
C             :
C             :
C    THE ARRAY CONTAINS THE COEFFICIENTS OF THE FOLLOWING
C    QUANTITIES:
C
C    I             VCOEF(I)
C  -------------------------------------------------------------
C    1             1
C    2             Y1
C    3             Y3
C    4             Y1**2
C    5             Y3**2
C    6             Y1*Y3
C    7             Y1**3
C    8             Y3**3
C    9             Y1**2*Y3
C   10             Y1*Y3**2
C   11             Y1**4
C   12             Y3**4
C   13             Y1**3*Y3
C   14             Y1*Y3**3
C   15             Y1**2*Y3**2
C
      REAL*8 M1,M2,M3,M,U1,U3,U13,V
C
      REAL*8 AMASS(3,10)
C
      REAL*8 RHOE,FA1,FA2,FA3,FA4,FA5,FA6,FA7,FA8,
     1       AA1,AA3,
     2       F1A1,F2A1,F3A1,F4A1,F1A3,F2A3,F3A3,F4A3,
     3       F11,F1A11,F2A11,F3A11,F33,F1A33,F2A33,F3A33,
     4       F13,F1A13,F2A13,F3A13,
     5       F111,F1A111,F2A111,F333,F1A333,F2A333,
     6       F113,F1A113,F2A113,F133,F1A133,F2A133,
     7       F1111,FA1111,F3333,FA3333,F1113,FA1113,
     8       F1333,FA1333,F1133,FA1133,
     8       RE12 , RE32 , RHOREF , VMIN
C
      REAL*8 ETRIAL , RHOMAX , PNM1 , HBASE , HSTEP , EGUESS ,
     1      PREC
C
      REAL*8 THRSH1 , THRSH2 , THRSH3 , THRSH4 , THRSH5 ,
     1      THRSH6 , THRSH7 , THRSH8 , THRSH9 , THRSHX ,
     2      VELLGT , PLANCK , AVOGNO , DEGRAD , RADDEG ,
     3      PI
C
      REAL*8  B11,B13,B111,B133,B113,
     2      B1111,B1333,B1113,B1133,
     3      B11111,B13333,B11113,B11333,B11133,
     4      B31,B33,B311,B333,B313,
     5      B3111,B3333,B3113,B3133,
     6      B31111,B33333,B31113,B31333,B31133
C
      REAL*8  CR1,CR3,CR11,CR33,CR13,
     2      CR111,CR333,CR113,CR133,
     3      CR1111,CR3333,CR1113,CR1333,CR1133
C
      INTEGER NFIL1 , NFIL2 , NFIL3 , NFIL4 , NFIL5 ,
     5       NFIL6 , NFIL7 , NFIL8 , NFIL9 , NFIL10 ,
     6       NFIL11 , NFIL12 , NFIL13 , NFIL14 , NFIL15 ,
     7       NFIL16 , NFIL17 , NFIL18 , NFIL19 , NFIL20 ,
     6       ITEST  , IPRINT , NSTNR , NSTNIN , IREST ,
     7       IISOT , IQUAS , ISYMS , NISOT , NQUAS ,
     8       NUMQUA , NOPTIT , NOPTIM , IOBSER , NOBSER,
     9       ISOMAX , NATTS  , V0TYPE , IVAR(128) , PARMAX ,
     1       NUMPAR , PRTINT
C
      INTEGER V1 ,V2, V3 , V2MXP1, V2P1,
     1       NSTINT , NSERIN , NSERP , NSERQ , KQUA , NTEST ,
     2       NSEPP2 , NSEQP1 , MBASIS ,
     3       MDIM , NFSYM0, NFASY0, NFSYMJ, NFASYJ,
     4       KSTYPA(2) , LSTYPA(2) , JMAX , V2MAX , JMAXP1
C
      INTEGER IQUANT(9,10)
C
      LOGICAL SYMM
C
      REAL*8 RMK(2),AAS(2)
      INTEGER NOBAS,MBASP1,LENIW
      REAL*8 CORO2,CORO3,
     1      Q1,Q3,Q11,Q33,Q13,Q111,Q333,Q113,Q133,
     2      Q1111,Q3333,Q1113,Q1333,Q1133,
     3      ANS1,ANS2,ANS3,VCOEF(15)
C
C
      include 'isotop.h'
      include 'value.h'
      include 'molcul.h'
      include 'rentel.h'
      include 'integ.h'
      include 'dimen.h'
      include 'lsfit.h'
      include 'rensys.h'
      include 'bcoeff.h'
      include 'crcoef.h'
      include 'morse.h'
      include 'modim.h'
C
      CORO2=CORO*CORO
      CORO3=CORO2*CORO
      Q1=F1+CORO*(CORO3*F4A1+CORO2*F3A1+CORO*F2A1+F1A1)
      Q3=F3+CORO*(CORO3*F4A3+CORO2*F3A3+CORO*F2A3+F1A3)
      Q11=(CORO3*(4.E0*CR1*F4A1+F3A11*AA1)+CORO2*(3.E0*CR1*F3A1+
     1 F2A11*AA1)+CORO*(2.E0*CR1*F2A1+F1A11*AA1)+CR1*F1A1+F11*AA1)
     1 /AA1
      Q33=(CORO3*(4.E0*CR3*F4A3+F3A33*AA3)+CORO2*(3.E0*CR3*F3A3+
     1 F2A33*AA3)+CORO*(2.E0*CR3*F2A3+F1A33*AA3)+CR3*F1A3+F33*AA3)
     1 /AA3
      Q13=(CORO3*(4.E0*CR3*F4A1*AA1+4.E0*CR1*F4A3*AA3+F3A13*AA3*
     1 AA1)+CORO2*(3.E0*CR3*F3A1*AA1+3.E0*CR1*F3A3*AA3+F2A13*AA3*
     1 AA1)+CORO*(2.E0*CR3*F2A1*AA1+2.E0*CR1*F2A3*AA3+F1A13*AA3*AA1)
     1 +CR3*F1A1*AA1+CR1*F1A3*AA3+F13*AA3*AA1)/(AA3*AA1)
      Q111=(4.E0*CORO3*F4A1*(2.E0*CR11+CR1*AA1)+CORO2*(6.E0*CR11*
     1 F3A1+12.E0*CR1**2*F4A1+6.E0*CR1*F3A11*AA1+3.E0*CR1*F3A1*AA1+2.E0*
     1 F2A111*AA1**2)+2.E0*CORO*(2.E0*CR11*F2A1+3.E0*CR1**2*F3A1+2.E0*
     1 CR1*F2A11*AA1+CR1*F2A1*AA1+F1A111*AA1**2)+2.E0*CR11*F1A1+2.E0
     1 *CR1**2*F2A1+2.E0*CR1*F1A11*AA1+CR1*F1A1*AA1+2.E0*F111*AA1**2
     1 )/(2.E0*AA1**2)
      Q333=(4.E0*CORO3*F4A3*(2.E0*CR33+CR3*AA3)+CORO2*(6.E0*CR33*
     1 F3A3+12.E0*CR3**2*F4A3+3.E0*CR3*F3A3*AA3+6.E0*CR3*F3A33*AA3+2.E0*
     1 F2A333*AA3**2)+2.E0*CORO*(2.E0*CR33*F2A3+3.E0*CR3**2*F3A3+CR3*
     1 F2A3*AA3+2.E0*CR3*F2A33*AA3+F1A333*AA3**2)+2.E0*CR33*F1A3+2.E0*
     1 CR3**2*F2A3+CR3*F1A3*AA3+2.E0*CR3*F1A33*AA3+2.E0*F333*AA3**2)
     1 /(2.E0*AA3**2)
      Q113=(4.E0*CORO3*(2.E0*CR13*F4A1*AA1+2.E0*CR11*F4A3*AA3+CR1*
     1 F4A3*AA3*AA1)+CORO2*(6.E0*CR13*F3A1*AA1+6.E0*CR11*F3A3*AA3+
     1 24.E0*CR3*CR1*F4A1*AA1+6.E0*CR3*F3A11*AA1**2+12.E0*CR1**2*F4A3*
     1 AA3+6.E0*CR1*F3A13*AA3*AA1+3.E0*CR1*F3A3*AA3*AA1+2.E0*AA3*
     1 F2A113*AA1**2)+2.E0*CORO*(2.E0*CR13*F2A1*AA1+2.E0*CR11*F2A3*AA3
     1 +6.E0*CR3*CR1*F3A1*AA1+2.E0*CR3*F2A11*AA1**2+3.E0*CR1**2*F3A3*
     1 AA3+2.E0*CR1*F2A13*AA3*AA1+CR1*F2A3*AA3*AA1+AA3*F1A113*AA1
     1 **2)+2.E0*CR13*F1A1*AA1+2.E0*CR11*F1A3*AA3+4.E0*CR3*CR1*F2A1*
     1 AA1+2.E0*CR3*F1A11*AA1**2+2.E0*CR1**2*F2A3*AA3+2.E0*CR1*F1A13*
     1 AA3*AA1+CR1*F1A3*AA3*AA1+2.E0*AA3*F113*AA1**2)/(2.E0*AA3*AA1
     1 **2)
      Q133=(4.E0*CORO3*(2.E0*CR13*F4A3*AA3+2.E0*CR33*F4A1*AA1+CR3*
     1 F4A1*AA3*AA1)+CORO2*(6.E0*CR13*F3A3*AA3+6.E0*CR33*F3A1*AA1+
     1 12.E0*CR3**2*F4A1*AA1+24.E0*CR3*CR1*F4A3*AA3+6.E0*CR3*F3A13*AA3*
     1 AA1+3.E0*CR3*F3A1*AA3*AA1+6.E0*CR1*F3A33*AA3**2+2.E0*F2A133*AA3
     1 **2*AA1)+2.E0*CORO*(2.E0*CR13*F2A3*AA3+2.E0*CR33*F2A1*AA1+3.E0*
     1 CR3**2*F3A1*AA1+6.E0*CR3*CR1*F3A3*AA3+2.E0*CR3*F2A13*AA3*AA1+
     1 CR3*F2A1*AA3*AA1+2.E0*CR1*F2A33*AA3**2+F1A133*AA3**2*AA1)+
     1 2.E0*CR13*F1A3*AA3+2.E0*CR33*F1A1*AA1+2.E0*CR3**2*F2A1*AA1+4.E0*
     1 CR3*CR1*F2A3*AA3+2.E0*CR3*F1A13*AA3*AA1+CR3*F1A1*AA3*AA1+2.E0
     1 *CR1*F1A33*AA3**2+2.E0*F133*AA3**2*AA1)/(2.E0*AA3**2*AA1)
      Q1111=(8.E0*CORO3*F4A1*(3.E0*CR111+3.E0*CR11*AA1+CR1*AA1**2)+
     1 3.E0*CORO2*(6.E0*CR111*F3A1+24.E0*CR11*CR1*F4A1
     1 +6.E0*CR11*F3A11*
     1 AA1+6.E0*CR11*F3A1*AA1+12.E0*CR1**2*F4A1*AA1+3.E0*CR1*F3A11*AA1
     1 **2+2.E0*CR1*F3A1*AA1**2)+2.E0*CORO*(6.E0*CR111*F2A1+18.E0*CR11*
     1 CR1*F3A1+6.E0*CR11*F2A11*AA1+6.E0*CR11*F2A1*AA1+12.E0*CR1**3*
     1 F4A1+9.E0*CR1**2*F3A11*AA1+9.E0*CR1**2*F3A1*AA1+3.E0*CR1*F2A11*
     1 AA1**2+6.E0*CR1*F2A111*AA1**2+2.E0*CR1*F2A1*AA1**2+3.E0*FA1111
     1 *AA1**3)+6.E0*CR111*F1A1+12.E0*CR11*CR1*F2A1+6.E0*CR11*F1A11*
     1 AA1+6.E0*CR11*F1A1*AA1+6.E0*CR1**3*F3A1+6.E0*CR1**2*F2A11*AA1+
     1 6.E0*CR1**2*F2A1*AA1+3.E0*CR1*F1A11*AA1**2+6.E0*CR1*F1A111*AA1**
     1 2+2.E0*CR1*F1A1*AA1**2+6.E0*F1111*AA1**3)/(6.E0*AA1**3)
      Q3333=(8.E0*CORO3*F4A3*(3.E0*CR333+3.E0*CR33*AA3+CR3*AA3**2)+
     1 3.E0*CORO2*(6.E0*CR333*F3A3+24.E0*CR33*CR3*F4A3+6.E0*CR33*F3A3*
     1 AA3+6.E0*CR33*F3A33*AA3+12.E0*CR3**2*F4A3*AA3+2.E0*CR3*F3A3*AA3
     1 **2+3.E0*CR3*F3A33*AA3**2)+2.E0*CORO*(6.E0*CR333*F2A3+18.E0*CR33*
     1 CR3*F3A3+6.E0*CR33*F2A3*AA3+6.E0*CR33*F2A33*AA3+12.E0*CR3**3*
     1 F4A3+9.E0*CR3**2*F3A3*AA3+9.E0*CR3**2*F3A33*AA3+6.E0*CR3*F2A333
     1 *AA3**2+2.E0*CR3*F2A3*AA3**2+3.E0*CR3*F2A33*AA3**2+3.E0*FA3333
     1 *AA3**3)+6.E0*CR333*F1A3+12.E0*CR33*CR3*F2A3+6.E0*CR33*F1A3*AA3
     1 +6.E0*CR33*F1A33*AA3+6.E0*CR3**3*F3A3+6.E0*CR3**2*F2A3*AA3+6.E0*
     1 CR3**2*F2A33*AA3+6.E0*CR3*F1A333*AA3**2+2.E0*CR3*F1A3*AA3**2+
     1 3.E0*CR3*F1A33*AA3**2+6.E0*F3333*AA3**3)/(6.E0*AA3**3)
      ANS2=18.E0*CR3*CR1**2*F3A1*AA1+12.E0*CR3*CR1*F2A11*AA1**2+6.E0*
     1 CR3*CR1*F2A1*AA1**2+6.E0*CR3*F1A111*AA1**3+6.E0*CR1**3*F3A3*
     1 AA3+6.E0*CR1**2*F2A13*AA3*AA1+6.E0*CR1**2*F2A3*AA3*AA1+3.E0*CR1
     1 *F1A13*AA3*AA1**2+2.E0*CR1*F1A3*AA3*AA1**2+6.E0*CR1*AA3*
     1 F1A113*AA1**2+6.E0*F1113*AA3*AA1**3
      ANS1=4.E0*CORO3*(6.E0*CR113*F4A1*AA1+6.E0*CR111*F4A3*AA3+3.E0*
     1 CR13*F4A1*AA1**2+6.E0*CR11*F4A3*AA3*AA1+2.E0*CR1*F4A3*AA3*AA1
     1 **2)+3.E0*CORO2*(6.E0*CR113*F3A1*AA1+6.E0*CR111*F3A3*AA3+24.E0*
     1 CR13*CR1*F4A1*AA1+6.E0*CR13*F3A11*AA1**2+3.E0*CR13*F3A1*AA1**
     1 2+24.E0*CR11*CR3*F4A1*AA1+24.E0*CR11*CR1*F4A3*AA3+6.E0*CR11*
     1 F3A13*AA3*AA1+6.E0*CR11*F3A3*AA3*AA1+12.E0*CR3*CR1*F4A1*AA1**
     1 2+12.E0*CR1**2*F4A3*AA3*AA1+3.E0*CR1*F3A13*AA3*AA1**2+2.E0*CR1*
     1 F3A3*AA3*AA1**2)+2.E0*CORO*(6.E0*CR113*F2A1*AA1+6.E0*CR111*F2A3
     1 *AA3+18.E0*CR13*CR1*F3A1*AA1+6.E0*CR13*F2A11*AA1**2+3.E0*CR13*
     1 F2A1*AA1**2+18.E0*CR11*CR3*F3A1*AA1+18.E0*CR11*CR1*F3A3*AA3+
     1 6.E0*CR11*F2A13*AA3*AA1+6.E0*CR11*F2A3*AA3*AA1+36.E0*CR3*CR1**2*
     1 F4A1*AA1+18.E0*CR3*CR1*F3A11*AA1**2+9.E0*CR3*CR1*F3A1*AA1**2+
     1 6.E0*CR3*F2A111*AA1**3+12.E0*CR1**3*F4A3*AA3+9.E0*CR1**2*F3A13*
     1 AA3*AA1+9.E0*CR1**2*F3A3*AA3*AA1+3.E0*CR1*F2A13*AA3*AA1**2+2.E0
     1 *CR1*F2A3*AA3*AA1**2+6.E0*CR1*AA3*F2A113*AA1**2+3.E0*FA1113*
     1 AA3*AA1**3)+6.E0*CR113*F1A1*AA1+6.E0*CR111*F1A3*AA3+12.E0*CR13*
     1 CR1*F2A1*AA1+6.E0*CR13*F1A11*AA1**2+3.E0*CR13*F1A1*AA1**2+12.E0
     1 *CR11*CR3*F2A1*AA1+12.E0*CR11*CR1*F2A3*AA3+6.E0*CR11*F1A13*
     1 AA3*AA1+6.E0*CR11*F1A3*AA3*AA1+ANS2
      Q1113=ANS1/(6.E0*AA3*AA1**3)
      ANS2=6.E0*CR3**3*F3A1*AA1+18.E0*CR3**2*CR1*F3A3*AA3+6.E0*CR3**2*
     1 F2A13*AA3*AA1+6.E0*CR3**2*F2A1*AA3*AA1+6.E0*CR3*CR1*F2A3*AA3
     1 **2+12.E0*CR3*CR1*F2A33*AA3**2+3.E0*CR3*F1A13*AA3**2*AA1+6.E0*
     1 CR3*F1A133*AA3**2*AA1+2.E0*CR3*F1A1*AA3**2*AA1+6.E0*CR1*
     1 F1A333*AA3**3+6.E0*F1333*AA3**3*AA1
      ANS1=4.E0*CORO3*(6.E0*CR133*F4A3*AA3+6.E0*CR333*F4A1*AA1+3.E0*
     1 CR13*F4A3*AA3**2+6.E0*CR33*F4A1*AA3*AA1+2.E0*CR3*F4A1*AA3**2*
     1 AA1)+3.E0*CORO2*(6.E0*CR133*F3A3*AA3+6.E0*CR333*F3A1*AA1+24.E0*
     1 CR13*CR3*F4A3*AA3+3.E0*CR13*F3A3*AA3**2+6.E0*CR13*F3A33*AA3**
     1 2+24.E0*CR33*CR3*F4A1*AA1+24.E0*CR33*CR1*F4A3*AA3+6.E0*CR33*
     1 F3A13*AA3*AA1+6.E0*CR33*F3A1*AA3*AA1+12.E0*CR3**2*F4A1*AA3*
     1 AA1+12.E0*CR3*CR1*F4A3*AA3**2+3.E0*CR3*F3A13*AA3**2*AA1+2.E0*
     1 CR3*F3A1*AA3**2*AA1)+2.E0*CORO*(6.E0*CR133*F2A3*AA3+6.E0*CR333*
     1 F2A1*AA1+18.E0*CR13*CR3*F3A3*AA3+3.E0*CR13*F2A3*AA3**2+6.E0*
     1 CR13*F2A33*AA3**2+18.E0*CR33*CR3*F3A1*AA1+18.E0*CR33*CR1*F3A3
     1 *AA3+6.E0*CR33*F2A13*AA3*AA1+6.E0*CR33*F2A1*AA3*AA1+12.E0*CR3**
     1 3*F4A1*AA1+36.E0*CR3**2*CR1*F4A3*AA3+9.E0*CR3**2*F3A13*AA3*
     1 AA1+9.E0*CR3**2*F3A1*AA3*AA1+9.E0*CR3*CR1*F3A3*AA3**2+18.E0*CR3
     1 *CR1*F3A33*AA3**2+3.E0*CR3*F2A13*AA3**2*AA1+6.E0*CR3*F2A133*
     1 AA3**2*AA1+2.E0*CR3*F2A1*AA3**2*AA1+6.E0*CR1*F2A333*AA3**3+3.E0
     1 *FA1333*AA3**3*AA1)+6.E0*CR133*F1A3*AA3+6.E0*CR333*F1A1*AA1+
     1 12.E0*CR13*CR3*F2A3*AA3+3.E0*CR13*F1A3*AA3**2+6.E0*CR13*F1A33*
     1 AA3**2+12.E0*CR33*CR3*F2A1*AA1+12.E0*CR33*CR1*F2A3*AA3+6.E0*
     1 CR33*F1A13*AA3*AA1+6.E0*CR33*F1A1*AA3*AA1+ANS2
      Q1333=ANS1/(6.E0*AA3**3*AA1)
      ANS2=4.E0*CR33*CR1*F2A1*AA1+2.E0*CR33*F1A11*AA1**2+4.E0*CR11*CR3
     1 *F2A3*AA3+2.E0*CR11*F1A33*AA3**2+6.E0*CR3**2*CR1*F3A1*AA1+2.E0*
     1 CR3**2*F2A11*AA1**2+6.E0*CR3*CR1**2*F3A3*AA3+4.E0*CR3*CR1*
     1 F2A13*AA3*AA1+2.E0*CR3*CR1*F2A3*AA3*AA1+2.E0*CR3*CR1*F2A1*AA3
     1 *AA1+CR3*F1A11*AA3*AA1**2+2.E0*CR3*AA3*F1A113*AA1**2+2.E0*CR1
     1 **2*F2A33*AA3**2+2.E0*CR1*F1A133*AA3**2*AA1+CR1*F1A33*AA3**
     1 2*AA1+2.E0*F1133*AA3**2*AA1**2
      ANS1=4.E0*CORO3*(2.E0*CR133*F4A1*AA1+2.E0*CR113*F4A3*AA3+CR13*
     1 F4A3*AA3*AA1+CR13*F4A1*AA3*AA1)+3.E0*CORO2*(2.E0*CR133*F3A1
     1 *AA1+2.E0*CR113*F3A3*AA3+8.E0*CR13*CR3*F4A1*AA1+8.E0*CR13*CR1*
     1 F4A3*AA3+2.E0*CR13*F3A13*AA3*AA1+CR13*F3A3*AA3*AA1+CR13*
     1 F3A1*AA3*AA1+8.E0*CR33*CR1*F4A1*AA1+2.E0*CR33*F3A11*AA1**2+8.E0
     1 *CR11*CR3*F4A3*AA3+2.E0*CR11*F3A33*AA3**2+4.E0*CR3*CR1*F4A3*
     1 AA3*AA1+4.E0*CR3*CR1*F4A1*AA3*AA1+CR3*F3A11*AA3*AA1**2+CR1*
     1 F3A33*AA3**2*AA1)+2.E0*CORO*(2.E0*CR133*F2A1*AA1+2.E0*CR113*
     1 F2A3*AA3+6.E0*CR13*CR3*F3A1*AA1+6.E0*CR13*CR1*F3A3*AA3+2.E0*
     1 CR13*F2A13*AA3*AA1+CR13*F2A3*AA3*AA1+CR13*F2A1*AA3*AA1+6.E0
     1 *CR33*CR1*F3A1*AA1+2.E0*CR33*F2A11*AA1**2+6.E0*CR11*CR3*F3A3*
     1 AA3+2.E0*CR11*F2A33*AA3**2+12.E0*CR3**2*CR1*F4A1*AA1+3.E0*CR3**
     1 2*F3A11*AA1**2+12.E0*CR3*CR1**2*F4A3*AA3+6.E0*CR3*CR1*F3A13*
     1 AA3*AA1+3.E0*CR3*CR1*F3A3*AA3*AA1+3.E0*CR3*CR1*F3A1*AA3*AA1+
     1 CR3*F2A11*AA3*AA1**2+2.E0*CR3*AA3*F2A113*AA1**2+3.E0*CR1**2*
     1 F3A33*AA3**2+2.E0*CR1*F2A133*AA3**2*AA1+CR1*F2A33*AA3**2*
     1 AA1+FA1133*AA3**2*AA1**2)+2.E0*CR133*F1A1*AA1+2.E0*CR113*
     1 F1A3*AA3+4.E0*CR13*CR3*F2A1*AA1+4.E0*CR13*CR1*F2A3*AA3+2.E0*
     1 CR13*F1A13*AA3*AA1+CR13*F1A3*AA3*AA1+CR13*F1A1*AA3*AA1+
     1 ANS2
      Q1133=ANS1/(2.E0*AA3**2*AA1**2)
      VCOEF(1)=0.0E0
      VCOEF(2)=Q1
      VCOEF(3)=Q3
      VCOEF(4)=Q11
      VCOEF(5)=Q33
      VCOEF(6)=Q13
      VCOEF(7)=Q111
      VCOEF(8)=Q333
      VCOEF(9)=Q113
      VCOEF(10)=Q133
      VCOEF(11)=Q1111
      VCOEF(12)=Q3333
      VCOEF(13)=Q1113
      VCOEF(14)=Q1333
      VCOEF(15)=Q1133
      RETURN
      END
